/*+@@file@@----------------------------------------------------------------*//*!
 \file		cscobj.h
 \par Description 
            Extension and update of headers for PellesC compiler suite.
 \par Project: 
            PellesC Headers extension
 \date		Created  on Mon Jul  4 18:07:48 2016
 \date		Modified on Mon Jul  4 18:07:48 2016
 \author	frankie
\*//*-@@file@@----------------------------------------------------------------*/

#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 500
#endif
#ifndef __REQUIRED_RPCSAL_H_VERSION__
#define __REQUIRED_RPCSAL_H_VERSION__ 100
#endif
#include "rpc.h"
#include "rpcndr.h"
#ifndef __RPCNDR_H_VERSION__
#error this stub requires an updated version of <rpcndr.h>
#endif
#ifndef COM_NO_WINDOWS_H
#include "windows.h"
#include "ole2.h"
#endif
#ifndef __cscobj_h__
#define __cscobj_h__
#if __POCC__ >= 500
#pragma once
#endif
#ifndef __IOfflineFilesEvents_FWD_DEFINED__
#define __IOfflineFilesEvents_FWD_DEFINED__
typedef interface IOfflineFilesEvents IOfflineFilesEvents;
#endif
#ifndef __IOfflineFilesEvents2_FWD_DEFINED__
#define __IOfflineFilesEvents2_FWD_DEFINED__
typedef interface IOfflineFilesEvents2 IOfflineFilesEvents2;
#endif
#ifndef __IOfflineFilesEvents3_FWD_DEFINED__
#define __IOfflineFilesEvents3_FWD_DEFINED__
typedef interface IOfflineFilesEvents3 IOfflineFilesEvents3;
#endif
#ifndef __IOfflineFilesEventsFilter_FWD_DEFINED__
#define __IOfflineFilesEventsFilter_FWD_DEFINED__
typedef interface IOfflineFilesEventsFilter IOfflineFilesEventsFilter;
#endif
#ifndef __IOfflineFilesErrorInfo_FWD_DEFINED__
#define __IOfflineFilesErrorInfo_FWD_DEFINED__
typedef interface IOfflineFilesErrorInfo IOfflineFilesErrorInfo;
#endif
#ifndef __IOfflineFilesSyncErrorItemInfo_FWD_DEFINED__
#define __IOfflineFilesSyncErrorItemInfo_FWD_DEFINED__
typedef interface IOfflineFilesSyncErrorItemInfo IOfflineFilesSyncErrorItemInfo;
#endif
#ifndef __IOfflineFilesSyncErrorInfo_FWD_DEFINED__
#define __IOfflineFilesSyncErrorInfo_FWD_DEFINED__
typedef interface IOfflineFilesSyncErrorInfo IOfflineFilesSyncErrorInfo;
#endif
#ifndef __IOfflineFilesProgress_FWD_DEFINED__
#define __IOfflineFilesProgress_FWD_DEFINED__
typedef interface IOfflineFilesProgress IOfflineFilesProgress;
#endif
#ifndef __IOfflineFilesSimpleProgress_FWD_DEFINED__
#define __IOfflineFilesSimpleProgress_FWD_DEFINED__
typedef interface IOfflineFilesSimpleProgress IOfflineFilesSimpleProgress;
#endif
#ifndef __IOfflineFilesSyncProgress_FWD_DEFINED__
#define __IOfflineFilesSyncProgress_FWD_DEFINED__
typedef interface IOfflineFilesSyncProgress IOfflineFilesSyncProgress;
#endif
#ifndef __IOfflineFilesSyncConflictHandler_FWD_DEFINED__
#define __IOfflineFilesSyncConflictHandler_FWD_DEFINED__
typedef interface IOfflineFilesSyncConflictHandler IOfflineFilesSyncConflictHandler;
#endif
#ifndef __IOfflineFilesItemFilter_FWD_DEFINED__
#define __IOfflineFilesItemFilter_FWD_DEFINED__
typedef interface IOfflineFilesItemFilter IOfflineFilesItemFilter;
#endif
#ifndef __IOfflineFilesItem_FWD_DEFINED__
#define __IOfflineFilesItem_FWD_DEFINED__
typedef interface IOfflineFilesItem IOfflineFilesItem;
#endif
#ifndef __IOfflineFilesServerItem_FWD_DEFINED__
#define __IOfflineFilesServerItem_FWD_DEFINED__
typedef interface IOfflineFilesServerItem IOfflineFilesServerItem;
#endif
#ifndef __IOfflineFilesShareItem_FWD_DEFINED__
#define __IOfflineFilesShareItem_FWD_DEFINED__
typedef interface IOfflineFilesShareItem IOfflineFilesShareItem;
#endif
#ifndef __IOfflineFilesDirectoryItem_FWD_DEFINED__
#define __IOfflineFilesDirectoryItem_FWD_DEFINED__
typedef interface IOfflineFilesDirectoryItem IOfflineFilesDirectoryItem;
#endif
#ifndef __IOfflineFilesFileItem_FWD_DEFINED__
#define __IOfflineFilesFileItem_FWD_DEFINED__
typedef interface IOfflineFilesFileItem IOfflineFilesFileItem;
#endif
#ifndef __IEnumOfflineFilesItems_FWD_DEFINED__
#define __IEnumOfflineFilesItems_FWD_DEFINED__
typedef interface IEnumOfflineFilesItems IEnumOfflineFilesItems;
#endif
#ifndef __IOfflineFilesItemContainer_FWD_DEFINED__
#define __IOfflineFilesItemContainer_FWD_DEFINED__
typedef interface IOfflineFilesItemContainer IOfflineFilesItemContainer;
#endif
#ifndef __IOfflineFilesChangeInfo_FWD_DEFINED__
#define __IOfflineFilesChangeInfo_FWD_DEFINED__
typedef interface IOfflineFilesChangeInfo IOfflineFilesChangeInfo;
#endif
#ifndef __IOfflineFilesDirtyInfo_FWD_DEFINED__
#define __IOfflineFilesDirtyInfo_FWD_DEFINED__
typedef interface IOfflineFilesDirtyInfo IOfflineFilesDirtyInfo;
#endif
#ifndef __IOfflineFilesFileSysInfo_FWD_DEFINED__
#define __IOfflineFilesFileSysInfo_FWD_DEFINED__
typedef interface IOfflineFilesFileSysInfo IOfflineFilesFileSysInfo;
#endif
#ifndef __IOfflineFilesPinInfo_FWD_DEFINED__
#define __IOfflineFilesPinInfo_FWD_DEFINED__
typedef interface IOfflineFilesPinInfo IOfflineFilesPinInfo;
#endif
#ifndef __IOfflineFilesPinInfo2_FWD_DEFINED__
#define __IOfflineFilesPinInfo2_FWD_DEFINED__
typedef interface IOfflineFilesPinInfo2 IOfflineFilesPinInfo2;
#endif
#ifndef __IOfflineFilesTransparentCacheInfo_FWD_DEFINED__
#define __IOfflineFilesTransparentCacheInfo_FWD_DEFINED__
typedef interface IOfflineFilesTransparentCacheInfo IOfflineFilesTransparentCacheInfo;
#endif
#ifndef __IOfflineFilesGhostInfo_FWD_DEFINED__
#define __IOfflineFilesGhostInfo_FWD_DEFINED__
typedef interface IOfflineFilesGhostInfo IOfflineFilesGhostInfo;
#endif
#ifndef __IOfflineFilesConnectionInfo_FWD_DEFINED__
#define __IOfflineFilesConnectionInfo_FWD_DEFINED__
typedef interface IOfflineFilesConnectionInfo IOfflineFilesConnectionInfo;
#endif
#ifndef __IOfflineFilesShareInfo_FWD_DEFINED__
#define __IOfflineFilesShareInfo_FWD_DEFINED__
typedef interface IOfflineFilesShareInfo IOfflineFilesShareInfo;
#endif
#ifndef __IOfflineFilesSuspend_FWD_DEFINED__
#define __IOfflineFilesSuspend_FWD_DEFINED__
typedef interface IOfflineFilesSuspend IOfflineFilesSuspend;
#endif
#ifndef __IOfflineFilesSuspendInfo_FWD_DEFINED__
#define __IOfflineFilesSuspendInfo_FWD_DEFINED__
typedef interface IOfflineFilesSuspendInfo IOfflineFilesSuspendInfo;
#endif
#ifndef __IOfflineFilesSetting_FWD_DEFINED__
#define __IOfflineFilesSetting_FWD_DEFINED__
typedef interface IOfflineFilesSetting IOfflineFilesSetting;
#endif
#ifndef __IEnumOfflineFilesSettings_FWD_DEFINED__
#define __IEnumOfflineFilesSettings_FWD_DEFINED__
typedef interface IEnumOfflineFilesSettings IEnumOfflineFilesSettings;
#endif
#ifndef __IOfflineFilesCache_FWD_DEFINED__
#define __IOfflineFilesCache_FWD_DEFINED__
typedef interface IOfflineFilesCache IOfflineFilesCache;
#endif
#ifndef __OfflineFilesSetting_FWD_DEFINED__
#define __OfflineFilesSetting_FWD_DEFINED__
typedef struct OfflineFilesSetting OfflineFilesSetting;
#endif
#ifndef __OfflineFilesCache_FWD_DEFINED__
#define __OfflineFilesCache_FWD_DEFINED__
typedef struct OfflineFilesCache OfflineFilesCache;
#endif
#include "oleidl.h"
#include "oaidl.h"
#include "ocidl.h"
typedef enum tagOFFLINEFILES_ITEM_TYPE
{
	OFFLINEFILES_ITEM_TYPE_FILE = 0,
	OFFLINEFILES_ITEM_TYPE_DIRECTORY = (OFFLINEFILES_ITEM_TYPE_FILE + 1),
	OFFLINEFILES_ITEM_TYPE_SHARE = (OFFLINEFILES_ITEM_TYPE_DIRECTORY + 1),
	OFFLINEFILES_ITEM_TYPE_SERVER = (OFFLINEFILES_ITEM_TYPE_SHARE + 1)
} OFFLINEFILES_ITEM_TYPE;
typedef enum tagOFFLINEFILES_ITEM_COPY
{
	OFFLINEFILES_ITEM_COPY_LOCAL = 0,
	OFFLINEFILES_ITEM_COPY_REMOTE = (OFFLINEFILES_ITEM_COPY_LOCAL + 1),
	OFFLINEFILES_ITEM_COPY_ORIGINAL = (OFFLINEFILES_ITEM_COPY_REMOTE + 1)
} OFFLINEFILES_ITEM_COPY;
typedef enum tagOFFLINEFILES_CONNECT_STATE
{
	OFFLINEFILES_CONNECT_STATE_UNKNOWN = 0,
	OFFLINEFILES_CONNECT_STATE_OFFLINE = (OFFLINEFILES_CONNECT_STATE_UNKNOWN + 1),
	OFFLINEFILES_CONNECT_STATE_ONLINE = (OFFLINEFILES_CONNECT_STATE_OFFLINE + 1),
	OFFLINEFILES_CONNECT_STATE_TRANSPARENTLY_CACHED = (OFFLINEFILES_CONNECT_STATE_ONLINE + 1),
	OFFLINEFILES_CONNECT_STATE_PARTLY_TRANSPARENTLY_CACHED = (OFFLINEFILES_CONNECT_STATE_TRANSPARENTLY_CACHED + 1)
} OFFLINEFILES_CONNECT_STATE;
typedef enum tagOFFLINEFILES_OFFLINE_REASON
{
	OFFLINEFILES_OFFLINE_REASON_UNKNOWN = 0,
	OFFLINEFILES_OFFLINE_REASON_NOT_APPLICABLE = (OFFLINEFILES_OFFLINE_REASON_UNKNOWN + 1),
	OFFLINEFILES_OFFLINE_REASON_CONNECTION_FORCED = (OFFLINEFILES_OFFLINE_REASON_NOT_APPLICABLE + 1),
	OFFLINEFILES_OFFLINE_REASON_CONNECTION_SLOW = (OFFLINEFILES_OFFLINE_REASON_CONNECTION_FORCED + 1),
	OFFLINEFILES_OFFLINE_REASON_CONNECTION_ERROR = (OFFLINEFILES_OFFLINE_REASON_CONNECTION_SLOW + 1),
	OFFLINEFILES_OFFLINE_REASON_ITEM_VERSION_CONFLICT = (OFFLINEFILES_OFFLINE_REASON_CONNECTION_ERROR + 1),
	OFFLINEFILES_OFFLINE_REASON_ITEM_SUSPENDED = (OFFLINEFILES_OFFLINE_REASON_ITEM_VERSION_CONFLICT + 1)
} OFFLINEFILES_OFFLINE_REASON;
typedef enum tagOFFLINEFILES_CACHING_MODE
{
	OFFLINEFILES_CACHING_MODE_NONE = 0,
	OFFLINEFILES_CACHING_MODE_NOCACHING = (OFFLINEFILES_CACHING_MODE_NONE + 1),
	OFFLINEFILES_CACHING_MODE_MANUAL = (OFFLINEFILES_CACHING_MODE_NOCACHING + 1),
	OFFLINEFILES_CACHING_MODE_AUTO_DOC = (OFFLINEFILES_CACHING_MODE_MANUAL + 1),
	OFFLINEFILES_CACHING_MODE_AUTO_PROGANDDOC = (OFFLINEFILES_CACHING_MODE_AUTO_DOC + 1)
} OFFLINEFILES_CACHING_MODE;
typedef enum tagOFFLINEFILES_OP_RESPONSE
{
	OFFLINEFILES_OP_CONTINUE = 0,
	OFFLINEFILES_OP_RETRY = (OFFLINEFILES_OP_CONTINUE + 1),
	OFFLINEFILES_OP_ABORT = (OFFLINEFILES_OP_RETRY + 1)
} OFFLINEFILES_OP_RESPONSE;
typedef enum tagOFFLINEFILES_EVENTS
{
	OFFLINEFILES_EVENT_CACHEMOVED = 0,
	OFFLINEFILES_EVENT_CACHEISFULL = (OFFLINEFILES_EVENT_CACHEMOVED + 1),
	OFFLINEFILES_EVENT_CACHEISCORRUPTED = (OFFLINEFILES_EVENT_CACHEISFULL + 1),
	OFFLINEFILES_EVENT_ENABLED = (OFFLINEFILES_EVENT_CACHEISCORRUPTED + 1),
	OFFLINEFILES_EVENT_ENCRYPTIONCHANGED = (OFFLINEFILES_EVENT_ENABLED + 1),
	OFFLINEFILES_EVENT_SYNCBEGIN = (OFFLINEFILES_EVENT_ENCRYPTIONCHANGED + 1),
	OFFLINEFILES_EVENT_SYNCFILERESULT = (OFFLINEFILES_EVENT_SYNCBEGIN + 1),
	OFFLINEFILES_EVENT_SYNCCONFLICTRECADDED = (OFFLINEFILES_EVENT_SYNCFILERESULT + 1),
	OFFLINEFILES_EVENT_SYNCCONFLICTRECUPDATED = (OFFLINEFILES_EVENT_SYNCCONFLICTRECADDED + 1),
	OFFLINEFILES_EVENT_SYNCCONFLICTRECREMOVED = (OFFLINEFILES_EVENT_SYNCCONFLICTRECUPDATED + 1),
	OFFLINEFILES_EVENT_SYNCEND = (OFFLINEFILES_EVENT_SYNCCONFLICTRECREMOVED + 1),
	OFFLINEFILES_EVENT_BACKGROUNDSYNCBEGIN = (OFFLINEFILES_EVENT_SYNCEND + 1),
	OFFLINEFILES_EVENT_BACKGROUNDSYNCEND = (OFFLINEFILES_EVENT_BACKGROUNDSYNCBEGIN + 1),
	OFFLINEFILES_EVENT_NETTRANSPORTARRIVED = (OFFLINEFILES_EVENT_BACKGROUNDSYNCEND + 1),
	OFFLINEFILES_EVENT_NONETTRANSPORTS = (OFFLINEFILES_EVENT_NETTRANSPORTARRIVED + 1),
	OFFLINEFILES_EVENT_ITEMDISCONNECTED = (OFFLINEFILES_EVENT_NONETTRANSPORTS + 1),
	OFFLINEFILES_EVENT_ITEMRECONNECTED = (OFFLINEFILES_EVENT_ITEMDISCONNECTED + 1),
	OFFLINEFILES_EVENT_ITEMAVAILABLEOFFLINE = (OFFLINEFILES_EVENT_ITEMRECONNECTED + 1),
	OFFLINEFILES_EVENT_ITEMNOTAVAILABLEOFFLINE = (OFFLINEFILES_EVENT_ITEMAVAILABLEOFFLINE + 1),
	OFFLINEFILES_EVENT_ITEMPINNED = (OFFLINEFILES_EVENT_ITEMNOTAVAILABLEOFFLINE + 1),
	OFFLINEFILES_EVENT_ITEMNOTPINNED = (OFFLINEFILES_EVENT_ITEMPINNED + 1),
	OFFLINEFILES_EVENT_ITEMMODIFIED = (OFFLINEFILES_EVENT_ITEMNOTPINNED + 1),
	OFFLINEFILES_EVENT_ITEMADDEDTOCACHE = (OFFLINEFILES_EVENT_ITEMMODIFIED + 1),
	OFFLINEFILES_EVENT_ITEMDELETEDFROMCACHE = (OFFLINEFILES_EVENT_ITEMADDEDTOCACHE + 1),
	OFFLINEFILES_EVENT_ITEMRENAMED = (OFFLINEFILES_EVENT_ITEMDELETEDFROMCACHE + 1),
	OFFLINEFILES_EVENT_DATALOST = (OFFLINEFILES_EVENT_ITEMRENAMED + 1),
	OFFLINEFILES_EVENT_PING = (OFFLINEFILES_EVENT_DATALOST + 1),
	OFFLINEFILES_EVENT_ITEMRECONNECTBEGIN = (OFFLINEFILES_EVENT_PING + 1),
	OFFLINEFILES_EVENT_ITEMRECONNECTEND = (OFFLINEFILES_EVENT_ITEMRECONNECTBEGIN + 1),
	OFFLINEFILES_EVENT_CACHEEVICTBEGIN = (OFFLINEFILES_EVENT_ITEMRECONNECTEND + 1),
	OFFLINEFILES_EVENT_CACHEEVICTEND = (OFFLINEFILES_EVENT_CACHEEVICTBEGIN + 1),
	OFFLINEFILES_EVENT_POLICYCHANGEDETECTED = (OFFLINEFILES_EVENT_CACHEEVICTEND + 1),
	OFFLINEFILES_EVENT_PREFERENCECHANGEDETECTED = (OFFLINEFILES_EVENT_POLICYCHANGEDETECTED + 1),
	OFFLINEFILES_EVENT_SETTINGSCHANGESAPPLIED = (OFFLINEFILES_EVENT_PREFERENCECHANGEDETECTED + 1),
	OFFLINEFILES_EVENT_TRANSPARENTCACHEITEMNOTIFY = (OFFLINEFILES_EVENT_SETTINGSCHANGESAPPLIED + 1),
	OFFLINEFILES_EVENT_PREFETCHFILEBEGIN = (OFFLINEFILES_EVENT_TRANSPARENTCACHEITEMNOTIFY + 1),
	OFFLINEFILES_EVENT_PREFETCHFILEEND = (OFFLINEFILES_EVENT_PREFETCHFILEBEGIN + 1),
	OFFLINEFILES_NUM_EVENTS = (OFFLINEFILES_EVENT_PREFETCHFILEEND + 1)
} OFFLINEFILES_EVENTS;
typedef enum tagOFFLINEFILES_PATHFILTER_MATCH
{
	OFFLINEFILES_PATHFILTER_SELF = 0,
	OFFLINEFILES_PATHFILTER_CHILD = (OFFLINEFILES_PATHFILTER_SELF + 1),
	OFFLINEFILES_PATHFILTER_DESCENDENT = (OFFLINEFILES_PATHFILTER_CHILD + 1),
	OFFLINEFILES_PATHFILTER_SELFORCHILD = (OFFLINEFILES_PATHFILTER_DESCENDENT + 1),
	OFFLINEFILES_PATHFILTER_SELFORDESCENDENT = (OFFLINEFILES_PATHFILTER_SELFORCHILD + 1)
} OFFLINEFILES_PATHFILTER_MATCH;
#define	OFFLINEFILES_SYNC_STATE_LOCAL_KNOWN	( 0x1 )
#define	OFFLINEFILES_SYNC_STATE_REMOTE_KNOWN	( 0x2 )
#define	OFFLINEFILES_CHANGES_NONE	( 0 )
#define	OFFLINEFILES_CHANGES_LOCAL_SIZE	( 0x1 )
#define	OFFLINEFILES_CHANGES_LOCAL_ATTRIBUTES	( 0x2 )
#define	OFFLINEFILES_CHANGES_LOCAL_TIME	( 0x4 )
#define	OFFLINEFILES_CHANGES_REMOTE_SIZE	( 0x8 )
#define	OFFLINEFILES_CHANGES_REMOTE_ATTRIBUTES	( 0x10 )
#define	OFFLINEFILES_CHANGES_REMOTE_TIME	( 0x20 )
typedef enum tagOFFLINEFILES_SYNC_CONFLICT_RESOLVE
{
	OFFLINEFILES_SYNC_CONFLICT_RESOLVE_NONE = 0,
	OFFLINEFILES_SYNC_CONFLICT_RESOLVE_KEEPLOCAL = (OFFLINEFILES_SYNC_CONFLICT_RESOLVE_NONE + 1),
	OFFLINEFILES_SYNC_CONFLICT_RESOLVE_KEEPREMOTE = (OFFLINEFILES_SYNC_CONFLICT_RESOLVE_KEEPLOCAL + 1),
	OFFLINEFILES_SYNC_CONFLICT_RESOLVE_KEEPALLCHANGES = (OFFLINEFILES_SYNC_CONFLICT_RESOLVE_KEEPREMOTE + 1),
	OFFLINEFILES_SYNC_CONFLICT_RESOLVE_KEEPLATEST = (OFFLINEFILES_SYNC_CONFLICT_RESOLVE_KEEPALLCHANGES + 1),
	OFFLINEFILES_SYNC_CONFLICT_RESOLVE_LOG = (OFFLINEFILES_SYNC_CONFLICT_RESOLVE_KEEPLATEST + 1),
	OFFLINEFILES_SYNC_CONFLICT_RESOLVE_SKIP = (OFFLINEFILES_SYNC_CONFLICT_RESOLVE_LOG + 1),
	OFFLINEFILES_SYNC_CONFLICT_ABORT = (OFFLINEFILES_SYNC_CONFLICT_RESOLVE_SKIP + 1),
	OFFLINEFILES_SYNC_CONFLICT_RESOLVE_NUMCODES = (OFFLINEFILES_SYNC_CONFLICT_ABORT + 1)
} OFFLINEFILES_SYNC_CONFLICT_RESOLVE;
#define OFFLINEFILES_SYNC_CONFLICT_RESOLVE_LATER OFFLINEFILES_SYNC_CONFLICT_RESOLVE_LOG
#define	OFFLINEFILES_ITEM_FILTER_FLAG_MODIFIED_DATA	( 0x1 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_MODIFIED_ATTRIBUTES	( 0x2 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_MODIFIED	( 0x4 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_CREATED	( 0x8 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_DELETED	( 0x10 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_DIRTY	( 0x20 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_SPARSE	( 0x40 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_FILE	( 0x80 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_DIRECTORY	( 0x100 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_PINNED_USER	( 0x200 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_PINNED_OTHERS	( 0x400 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_PINNED_COMPUTER	( 0x800 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_PINNED	( 0x1000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_GHOST	( 0x2000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_SUSPENDED	( 0x4000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_OFFLINE	( 0x8000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_ONLINE	( 0x10000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_USER_WRITE	( 0x20000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_USER_READ	( 0x40000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_USER_ANYACCESS	( 0x80000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_OTHER_WRITE	( 0x100000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_OTHER_READ	( 0x200000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_OTHER_ANYACCESS	( 0x400000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_GUEST_WRITE	( 0x800000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_GUEST_READ	( 0x1000000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAG_GUEST_ANYACCESS	( 0x2000000 )
#define	OFFLINEFILES_ITEM_FILTER_FLAGS	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( OFFLINEFILES_ITEM_FILTER_FLAG_MODIFIED_DATA | OFFLINEFILES_ITEM_FILTER_FLAG_MODIFIED_ATTRIBUTES )  | OFFLINEFILES_ITEM_FILTER_FLAG_MODIFIED )  | OFFLINEFILES_ITEM_FILTER_FLAG_CREATED )  | OFFLINEFILES_ITEM_FILTER_FLAG_DELETED )  | OFFLINEFILES_ITEM_FILTER_FLAG_DIRTY )  | OFFLINEFILES_ITEM_FILTER_FLAG_SPARSE )  | OFFLINEFILES_ITEM_FILTER_FLAG_FILE )  | OFFLINEFILES_ITEM_FILTER_FLAG_DIRECTORY )  | OFFLINEFILES_ITEM_FILTER_FLAG_PINNED_USER )  | OFFLINEFILES_ITEM_FILTER_FLAG_PINNED_OTHERS )  | OFFLINEFILES_ITEM_FILTER_FLAG_PINNED_COMPUTER )  | OFFLINEFILES_ITEM_FILTER_FLAG_PINNED )  | OFFLINEFILES_ITEM_FILTER_FLAG_GHOST )  | OFFLINEFILES_ITEM_FILTER_FLAG_SUSPENDED )  | OFFLINEFILES_ITEM_FILTER_FLAG_OFFLINE )  | OFFLINEFILES_ITEM_FILTER_FLAG_ONLINE )  | OFFLINEFILES_ITEM_FILTER_FLAG_USER_WRITE )  | OFFLINEFILES_ITEM_FILTER_FLAG_USER_READ )  | OFFLINEFILES_ITEM_FILTER_FLAG_USER_ANYACCESS )  | OFFLINEFILES_ITEM_FILTER_FLAG_OTHER_WRITE )  | OFFLINEFILES_ITEM_FILTER_FLAG_OTHER_READ )  | OFFLINEFILES_ITEM_FILTER_FLAG_OTHER_ANYACCESS )  | OFFLINEFILES_ITEM_FILTER_FLAG_GUEST_WRITE )  | OFFLINEFILES_ITEM_FILTER_FLAG_GUEST_READ )  | OFFLINEFILES_ITEM_FILTER_FLAG_GUEST_ANYACCESS )  )
typedef enum tagOFFLINEFILES_ITEM_TIME
{
	OFFLINEFILES_ITEM_TIME_CREATION = 0,
	OFFLINEFILES_ITEM_TIME_LASTACCESS = (OFFLINEFILES_ITEM_TIME_CREATION + 1),
	OFFLINEFILES_ITEM_TIME_LASTWRITE = (OFFLINEFILES_ITEM_TIME_LASTACCESS + 1)
} OFFLINEFILES_ITEM_TIME;
typedef enum tagOFFLINEFILES_COMPARE
{
	OFFLINEFILES_COMPARE_EQ = 0,
	OFFLINEFILES_COMPARE_NEQ = (OFFLINEFILES_COMPARE_EQ + 1),
	OFFLINEFILES_COMPARE_LT = (OFFLINEFILES_COMPARE_NEQ + 1),
	OFFLINEFILES_COMPARE_GT = (OFFLINEFILES_COMPARE_LT + 1),
	OFFLINEFILES_COMPARE_LTE = (OFFLINEFILES_COMPARE_GT + 1),
	OFFLINEFILES_COMPARE_GTE = (OFFLINEFILES_COMPARE_LTE + 1)
} OFFLINEFILES_COMPARE;
#define	OFFLINEFILES_ITEM_QUERY_REMOTEINFO	( 0x1 )
#define	OFFLINEFILES_ITEM_QUERY_CONNECTIONSTATE	( 0x2 )
#define	OFFLINEFILES_ITEM_QUERY_LOCALDIRTYBYTECOUNT	( 0x4 )
#define	OFFLINEFILES_ITEM_QUERY_REMOTEDIRTYBYTECOUNT	( 0x8 )
#define	OFFLINEFILES_ITEM_QUERY_INCLUDETRANSPARENTCACHE	( 0x10 )
#define	OFFLINEFILES_ITEM_QUERY_ADMIN	( 0x80000000 )
#define	OFFLINEFILES_ITEM_QUERY_FLAGS	( ( ( ( ( ( OFFLINEFILES_ITEM_QUERY_REMOTEINFO | OFFLINEFILES_ITEM_QUERY_CONNECTIONSTATE )  | OFFLINEFILES_ITEM_QUERY_ADMIN )  | OFFLINEFILES_ITEM_QUERY_LOCALDIRTYBYTECOUNT )  | OFFLINEFILES_ITEM_QUERY_REMOTEDIRTYBYTECOUNT )  | OFFLINEFILES_ITEM_QUERY_INCLUDETRANSPARENTCACHE )  )
#define	OFFLINEFILES_ENUM_FLAT	( 0x1 )
#define	OFFLINEFILES_ENUM_FLAT_FILESONLY	( 0x2 )
#define	OFFLINEFILES_ENUM_FLAGS	( ( OFFLINEFILES_ENUM_FLAT | OFFLINEFILES_ENUM_FLAT_FILESONLY )  )
#define	OFFLINEFILES_SETTING_SCOPE_USER	( 0x1 )
#define	OFFLINEFILES_SETTING_SCOPE_COMPUTER	( 0x2 )
typedef enum tagOFFLINEFILES_SETTING_VALUE_TYPE
{
	OFFLINEFILES_SETTING_VALUE_UI4 = 0,
	OFFLINEFILES_SETTING_VALUE_BSTR = (OFFLINEFILES_SETTING_VALUE_UI4 + 1),
	OFFLINEFILES_SETTING_VALUE_BSTR_DBLNULTERM = (OFFLINEFILES_SETTING_VALUE_BSTR + 1),
	OFFLINEFILES_SETTING_VALUE_2DIM_ARRAY_BSTR_UI4 = (OFFLINEFILES_SETTING_VALUE_BSTR_DBLNULTERM + 1),
	OFFLINEFILES_SETTING_VALUE_2DIM_ARRAY_BSTR_BSTR = (OFFLINEFILES_SETTING_VALUE_2DIM_ARRAY_BSTR_UI4 + 1)
} OFFLINEFILES_SETTING_VALUE_TYPE;
#define OFFLINEFILES_SETTING_PinLinkTargets   L"LinkTargetCaching"
#define	OFFLINEFILES_PINLINKTARGETS_NEVER	( 0 )
#define	OFFLINEFILES_PINLINKTARGETS_EXPLICIT	( 1 )
#define	OFFLINEFILES_PINLINKTARGETS_ALWAYS	( 2 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_FILLSPARSE	( 0x1 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_SYNCIN	( 0x2 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_SYNCOUT	( 0x4 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_PINNEWFILES	( 0x8 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_PINLINKTARGETS	( 0x10 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_PINFORUSER	( 0x20 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_PINFORUSER_POLICY	( 0x40 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_PINFORALL	( 0x80 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_PINFORREDIR	( 0x100 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_LOWPRIORITY	( 0x200 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_ASYNCPROGRESS	( 0x400 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_INTERACTIVE	( 0x800 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_CONSOLE	( 0x1000 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_SKIPSUSPENDEDDIRS	( 0x2000 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAG_BACKGROUND	( 0x10000 )
#define	OFFLINEFILES_SYNC_CONTROL_CR_MASK	( 0xf0000000 )
#define	OFFLINEFILES_SYNC_CONTROL_CR_DEFAULT	( 0 )
#define	OFFLINEFILES_SYNC_CONTROL_CR_KEEPLOCAL	( 0x10000000 )
#define	OFFLINEFILES_SYNC_CONTROL_CR_KEEPREMOTE	( 0x20000000 )
#define	OFFLINEFILES_SYNC_CONTROL_CR_KEEPLATEST	( 0x30000000 )
#define	OFFLINEFILES_SYNC_CONTROL_FLAGS	( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( OFFLINEFILES_SYNC_CONTROL_FLAG_FILLSPARSE | OFFLINEFILES_SYNC_CONTROL_FLAG_SYNCIN )  | OFFLINEFILES_SYNC_CONTROL_FLAG_SYNCOUT )  | OFFLINEFILES_SYNC_CONTROL_FLAG_PINNEWFILES )  | OFFLINEFILES_SYNC_CONTROL_FLAG_PINLINKTARGETS )  | OFFLINEFILES_SYNC_CONTROL_FLAG_PINFORUSER )  | OFFLINEFILES_SYNC_CONTROL_FLAG_PINFORUSER_POLICY )  | OFFLINEFILES_SYNC_CONTROL_FLAG_PINFORALL )  | OFFLINEFILES_SYNC_CONTROL_FLAG_PINFORREDIR )  | OFFLINEFILES_SYNC_CONTROL_FLAG_LOWPRIORITY )  | OFFLINEFILES_SYNC_CONTROL_FLAG_ASYNCPROGRESS )  | OFFLINEFILES_SYNC_CONTROL_FLAG_INTERACTIVE )  | OFFLINEFILES_SYNC_CONTROL_FLAG_CONSOLE )  | OFFLINEFILES_SYNC_CONTROL_FLAG_SKIPSUSPENDEDDIRS )  | OFFLINEFILES_SYNC_CONTROL_FLAG_BACKGROUND )  | OFFLINEFILES_SYNC_CONTROL_CR_KEEPLOCAL )  | OFFLINEFILES_SYNC_CONTROL_CR_KEEPREMOTE )  | OFFLINEFILES_SYNC_CONTROL_CR_KEEPLATEST )  )
#define	OFFLINEFILES_PIN_CONTROL_FLAG_FORUSER	( OFFLINEFILES_SYNC_CONTROL_FLAG_PINFORUSER )
#define	OFFLINEFILES_PIN_CONTROL_FLAG_FORUSER_POLICY	( OFFLINEFILES_SYNC_CONTROL_FLAG_PINFORUSER_POLICY )
#define	OFFLINEFILES_PIN_CONTROL_FLAG_FORALL	( OFFLINEFILES_SYNC_CONTROL_FLAG_PINFORALL )
#define	OFFLINEFILES_PIN_CONTROL_FLAG_FORREDIR	( OFFLINEFILES_SYNC_CONTROL_FLAG_PINFORREDIR )
#define	OFFLINEFILES_PIN_CONTROL_FLAG_FILL	( OFFLINEFILES_SYNC_CONTROL_FLAG_FILLSPARSE )
#define	OFFLINEFILES_PIN_CONTROL_FLAG_LOWPRIORITY	( OFFLINEFILES_SYNC_CONTROL_FLAG_LOWPRIORITY )
#define	OFFLINEFILES_PIN_CONTROL_FLAG_ASYNCPROGRESS	( OFFLINEFILES_SYNC_CONTROL_FLAG_ASYNCPROGRESS )
#define	OFFLINEFILES_PIN_CONTROL_FLAG_INTERACTIVE	( OFFLINEFILES_SYNC_CONTROL_FLAG_INTERACTIVE )
#define	OFFLINEFILES_PIN_CONTROL_FLAG_CONSOLE	( OFFLINEFILES_SYNC_CONTROL_FLAG_CONSOLE )
#define	OFFLINEFILES_PIN_CONTROL_FLAG_PINLINKTARGETS	( OFFLINEFILES_SYNC_CONTROL_FLAG_PINLINKTARGETS )
#define	OFFLINEFILES_PIN_CONTROL_FLAG_BACKGROUND	( OFFLINEFILES_SYNC_CONTROL_FLAG_BACKGROUND )
#define	OFFLINEFILES_PIN_CONTROL_FLAGS	( ( ( ( ( ( ( ( ( ( ( OFFLINEFILES_PIN_CONTROL_FLAG_FORUSER | OFFLINEFILES_PIN_CONTROL_FLAG_FORUSER_POLICY )  | OFFLINEFILES_PIN_CONTROL_FLAG_FORALL )  | OFFLINEFILES_PIN_CONTROL_FLAG_FORREDIR )  | OFFLINEFILES_PIN_CONTROL_FLAG_FILL )  | OFFLINEFILES_PIN_CONTROL_FLAG_LOWPRIORITY )  | OFFLINEFILES_PIN_CONTROL_FLAG_ASYNCPROGRESS )  | OFFLINEFILES_PIN_CONTROL_FLAG_INTERACTIVE )  | OFFLINEFILES_PIN_CONTROL_FLAG_CONSOLE )  | OFFLINEFILES_PIN_CONTROL_FLAG_PINLINKTARGETS )  | OFFLINEFILES_PIN_CONTROL_FLAG_BACKGROUND )  )
#define	OFFLINEFILES_ENCRYPTION_CONTROL_FLAG_LOWPRIORITY	( OFFLINEFILES_SYNC_CONTROL_FLAG_LOWPRIORITY )
#define	OFFLINEFILES_ENCRYPTION_CONTROL_FLAG_ASYNCPROGRESS	( OFFLINEFILES_SYNC_CONTROL_FLAG_ASYNCPROGRESS )
#define	OFFLINEFILES_ENCRYPTION_CONTROL_FLAG_INTERACTIVE	( OFFLINEFILES_SYNC_CONTROL_FLAG_INTERACTIVE )
#define	OFFLINEFILES_ENCRYPTION_CONTROL_FLAG_CONSOLE	( OFFLINEFILES_SYNC_CONTROL_FLAG_CONSOLE )
#define	OFFLINEFILES_ENCRYPTION_CONTROL_FLAG_BACKGROUND	( OFFLINEFILES_SYNC_CONTROL_FLAG_BACKGROUND )
#define	OFFLINEFILES_ENCRYPTION_CONTROL_FLAGS	( ( ( ( ( OFFLINEFILES_ENCRYPTION_CONTROL_FLAG_LOWPRIORITY | OFFLINEFILES_ENCRYPTION_CONTROL_FLAG_ASYNCPROGRESS )  | OFFLINEFILES_ENCRYPTION_CONTROL_FLAG_INTERACTIVE )  | OFFLINEFILES_ENCRYPTION_CONTROL_FLAG_CONSOLE )  | OFFLINEFILES_ENCRYPTION_CONTROL_FLAG_BACKGROUND )  )
#define	OFFLINEFILES_DELETE_FLAG_NOAUTOCACHED	( 0x1 )
#define	OFFLINEFILES_DELETE_FLAG_NOPINNED	( 0x2 )
#define	OFFLINEFILES_DELETE_FLAG_DELMODIFIED	( 0x4 )
#define	OFFLINEFILES_DELETE_FLAG_ADMIN	( 0x80000000 )
#define	OFFLINEFILES_DELETE_FLAGS	( ( ( ( OFFLINEFILES_DELETE_FLAG_NOAUTOCACHED | OFFLINEFILES_DELETE_FLAG_NOPINNED )  | OFFLINEFILES_DELETE_FLAG_DELMODIFIED )  | OFFLINEFILES_DELETE_FLAG_ADMIN )  )
#define	OFFLINEFILES_TRANSITION_FLAG_INTERACTIVE	( 0x1 )
#define	OFFLINEFILES_TRANSITION_FLAG_CONSOLE	( 0x2 )
#define	OFFLINEFILES_TRANSITION_FLAGS	( ( OFFLINEFILES_TRANSITION_FLAG_INTERACTIVE | OFFLINEFILES_TRANSITION_FLAG_CONSOLE )  )
typedef enum tagOFFLINEFILES_SYNC_OPERATION
{
	OFFLINEFILES_SYNC_OPERATION_CREATE_COPY_ON_SERVER = 0,
	OFFLINEFILES_SYNC_OPERATION_CREATE_COPY_ON_CLIENT = (OFFLINEFILES_SYNC_OPERATION_CREATE_COPY_ON_SERVER + 1),
	OFFLINEFILES_SYNC_OPERATION_SYNC_TO_SERVER = (OFFLINEFILES_SYNC_OPERATION_CREATE_COPY_ON_CLIENT + 1),
	OFFLINEFILES_SYNC_OPERATION_SYNC_TO_CLIENT = (OFFLINEFILES_SYNC_OPERATION_SYNC_TO_SERVER + 1),
	OFFLINEFILES_SYNC_OPERATION_DELETE_SERVER_COPY = (OFFLINEFILES_SYNC_OPERATION_SYNC_TO_CLIENT + 1),
	OFFLINEFILES_SYNC_OPERATION_DELETE_CLIENT_COPY = (OFFLINEFILES_SYNC_OPERATION_DELETE_SERVER_COPY + 1),
	OFFLINEFILES_SYNC_OPERATION_PIN = (OFFLINEFILES_SYNC_OPERATION_DELETE_CLIENT_COPY + 1),
	OFFLINEFILES_SYNC_OPERATION_PREPARE = (OFFLINEFILES_SYNC_OPERATION_PIN + 1)
} OFFLINEFILES_SYNC_OPERATION;
#define	OFFLINEFILES_SYNC_ITEM_CHANGE_NONE	( 0 )
#define	OFFLINEFILES_SYNC_ITEM_CHANGE_CHANGETIME	( 0x1 )
#define	OFFLINEFILES_SYNC_ITEM_CHANGE_WRITETIME	( 0x2 )
#define	OFFLINEFILES_SYNC_ITEM_CHANGE_FILESIZE	( 0x4 )
#define	OFFLINEFILES_SYNC_ITEM_CHANGE_ATTRIBUTES	( 0x8 )
typedef enum tagOFFLINEFILES_SYNC_STATE
{
	OFFLINEFILES_SYNC_STATE_Stable = 0,
	OFFLINEFILES_SYNC_STATE_FileOnClient_DirOnServer = (OFFLINEFILES_SYNC_STATE_Stable + 1),
	OFFLINEFILES_SYNC_STATE_FileOnClient_NoServerCopy = (OFFLINEFILES_SYNC_STATE_FileOnClient_DirOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirOnClient_FileOnServer = (OFFLINEFILES_SYNC_STATE_FileOnClient_NoServerCopy + 1),
	OFFLINEFILES_SYNC_STATE_DirOnClient_FileChangedOnServer = (OFFLINEFILES_SYNC_STATE_DirOnClient_FileOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirOnClient_NoServerCopy = (OFFLINEFILES_SYNC_STATE_DirOnClient_FileChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileCreatedOnClient_NoServerCopy = (OFFLINEFILES_SYNC_STATE_DirOnClient_NoServerCopy + 1),
	OFFLINEFILES_SYNC_STATE_FileCreatedOnClient_FileChangedOnServer = (OFFLINEFILES_SYNC_STATE_FileCreatedOnClient_NoServerCopy + 1),
	OFFLINEFILES_SYNC_STATE_FileCreatedOnClient_DirChangedOnServer = (OFFLINEFILES_SYNC_STATE_FileCreatedOnClient_FileChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileCreatedOnClient_FileOnServer = (OFFLINEFILES_SYNC_STATE_FileCreatedOnClient_DirChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileCreatedOnClient_DirOnServer = (OFFLINEFILES_SYNC_STATE_FileCreatedOnClient_FileOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileCreatedOnClient_DeletedOnServer = (OFFLINEFILES_SYNC_STATE_FileCreatedOnClient_DirOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileChangedOnClient_ChangedOnServer = (OFFLINEFILES_SYNC_STATE_FileCreatedOnClient_DeletedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileChangedOnClient_DirOnServer = (OFFLINEFILES_SYNC_STATE_FileChangedOnClient_ChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileChangedOnClient_DirChangedOnServer = (OFFLINEFILES_SYNC_STATE_FileChangedOnClient_DirOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileChangedOnClient_DeletedOnServer = (OFFLINEFILES_SYNC_STATE_FileChangedOnClient_DirChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileSparseOnClient_ChangedOnServer = (OFFLINEFILES_SYNC_STATE_FileChangedOnClient_DeletedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileSparseOnClient_DeletedOnServer = (OFFLINEFILES_SYNC_STATE_FileSparseOnClient_ChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileSparseOnClient_DirOnServer = (OFFLINEFILES_SYNC_STATE_FileSparseOnClient_DeletedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileSparseOnClient_DirChangedOnServer = (OFFLINEFILES_SYNC_STATE_FileSparseOnClient_DirOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirCreatedOnClient_NoServerCopy = (OFFLINEFILES_SYNC_STATE_FileSparseOnClient_DirChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirCreatedOnClient_DirOnServer = (OFFLINEFILES_SYNC_STATE_DirCreatedOnClient_NoServerCopy + 1),
	OFFLINEFILES_SYNC_STATE_DirCreatedOnClient_FileOnServer = (OFFLINEFILES_SYNC_STATE_DirCreatedOnClient_DirOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirCreatedOnClient_FileChangedOnServer = (OFFLINEFILES_SYNC_STATE_DirCreatedOnClient_FileOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirCreatedOnClient_DirChangedOnServer = (OFFLINEFILES_SYNC_STATE_DirCreatedOnClient_FileChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirCreatedOnClient_DeletedOnServer = (OFFLINEFILES_SYNC_STATE_DirCreatedOnClient_DirChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirChangedOnClient_FileOnServer = (OFFLINEFILES_SYNC_STATE_DirCreatedOnClient_DeletedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirChangedOnClient_FileChangedOnServer = (OFFLINEFILES_SYNC_STATE_DirChangedOnClient_FileOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirChangedOnClient_ChangedOnServer = (OFFLINEFILES_SYNC_STATE_DirChangedOnClient_FileChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirChangedOnClient_DeletedOnServer = (OFFLINEFILES_SYNC_STATE_DirChangedOnClient_ChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_NoClientCopy_FileOnServer = (OFFLINEFILES_SYNC_STATE_DirChangedOnClient_DeletedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_NoClientCopy_DirOnServer = (OFFLINEFILES_SYNC_STATE_NoClientCopy_FileOnServer + 1),
	OFFLINEFILES_SYNC_STATE_NoClientCopy_FileChangedOnServer = (OFFLINEFILES_SYNC_STATE_NoClientCopy_DirOnServer + 1),
	OFFLINEFILES_SYNC_STATE_NoClientCopy_DirChangedOnServer = (OFFLINEFILES_SYNC_STATE_NoClientCopy_FileChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DeletedOnClient_FileOnServer = (OFFLINEFILES_SYNC_STATE_NoClientCopy_DirChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DeletedOnClient_DirOnServer = (OFFLINEFILES_SYNC_STATE_DeletedOnClient_FileOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DeletedOnClient_FileChangedOnServer = (OFFLINEFILES_SYNC_STATE_DeletedOnClient_DirOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DeletedOnClient_DirChangedOnServer = (OFFLINEFILES_SYNC_STATE_DeletedOnClient_FileChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileSparseOnClient = (OFFLINEFILES_SYNC_STATE_DeletedOnClient_DirChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileChangedOnClient = (OFFLINEFILES_SYNC_STATE_FileSparseOnClient + 1),
	OFFLINEFILES_SYNC_STATE_FileRenamedOnClient = (OFFLINEFILES_SYNC_STATE_FileChangedOnClient + 1),
	OFFLINEFILES_SYNC_STATE_DirSparseOnClient = (OFFLINEFILES_SYNC_STATE_FileRenamedOnClient + 1),
	OFFLINEFILES_SYNC_STATE_DirChangedOnClient = (OFFLINEFILES_SYNC_STATE_DirSparseOnClient + 1),
	OFFLINEFILES_SYNC_STATE_DirRenamedOnClient = (OFFLINEFILES_SYNC_STATE_DirChangedOnClient + 1),
	OFFLINEFILES_SYNC_STATE_FileChangedOnServer = (OFFLINEFILES_SYNC_STATE_DirRenamedOnClient + 1),
	OFFLINEFILES_SYNC_STATE_FileRenamedOnServer = (OFFLINEFILES_SYNC_STATE_FileChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileDeletedOnServer = (OFFLINEFILES_SYNC_STATE_FileRenamedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirChangedOnServer = (OFFLINEFILES_SYNC_STATE_FileDeletedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirRenamedOnServer = (OFFLINEFILES_SYNC_STATE_DirChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_DirDeletedOnServer = (OFFLINEFILES_SYNC_STATE_DirRenamedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileReplacedAndDeletedOnClient_FileOnServer = (OFFLINEFILES_SYNC_STATE_DirDeletedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileReplacedAndDeletedOnClient_FileChangedOnServer = (OFFLINEFILES_SYNC_STATE_FileReplacedAndDeletedOnClient_FileOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileReplacedAndDeletedOnClient_DirOnServer = (OFFLINEFILES_SYNC_STATE_FileReplacedAndDeletedOnClient_FileChangedOnServer + 1),
	OFFLINEFILES_SYNC_STATE_FileReplacedAndDeletedOnClient_DirChangedOnServer = (OFFLINEFILES_SYNC_STATE_FileReplacedAndDeletedOnClient_DirOnServer + 1),
	OFFLINEFILES_SYNC_STATE_NUMSTATES = (OFFLINEFILES_SYNC_STATE_FileReplacedAndDeletedOnClient_DirChangedOnServer + 1)
} OFFLINEFILES_SYNC_STATE;
extern RPC_IF_HANDLE __MIDL_itf_cscobj_0000_0000_v0_0_c_ifspec;
extern RPC_IF_HANDLE __MIDL_itf_cscobj_0000_0000_v0_0_s_ifspec;
#ifndef __IOfflineFilesEvents_INTERFACE_DEFINED__
#define __IOfflineFilesEvents_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesEvents;
typedef struct IOfflineFilesEventsVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesEvents * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesEvents * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesEvents * This);
	HRESULT(STDMETHODCALLTYPE * CacheMoved) (IOfflineFilesEvents * This, LPCWSTR pszOldPath, LPCWSTR pszNewPath);
	HRESULT(STDMETHODCALLTYPE * CacheIsFull) (IOfflineFilesEvents * This);
	HRESULT(STDMETHODCALLTYPE * CacheIsCorrupted) (IOfflineFilesEvents * This);
	HRESULT(STDMETHODCALLTYPE * Enabled) (IOfflineFilesEvents * This, BOOL bEnabled);
	HRESULT(STDMETHODCALLTYPE * EncryptionChanged) (IOfflineFilesEvents * This, BOOL bWasEncrypted, BOOL bWasPartial, BOOL bIsEncrypted, BOOL bIsPartial);
	HRESULT(STDMETHODCALLTYPE * SyncBegin) (IOfflineFilesEvents * This, REFGUID rSyncId);
	HRESULT(STDMETHODCALLTYPE * SyncFileResult) (IOfflineFilesEvents * This, REFGUID rSyncId, LPCWSTR pszFile, HRESULT hrResult);
	HRESULT(STDMETHODCALLTYPE * SyncConflictRecAdded) (IOfflineFilesEvents * This, LPCWSTR pszConflictPath, const FILETIME * pftConflictDateTime, OFFLINEFILES_SYNC_STATE ConflictSyncState);
	HRESULT(STDMETHODCALLTYPE * SyncConflictRecUpdated) (IOfflineFilesEvents * This, LPCWSTR pszConflictPath, const FILETIME * pftConflictDateTime, OFFLINEFILES_SYNC_STATE ConflictSyncState);
	HRESULT(STDMETHODCALLTYPE * SyncConflictRecRemoved) (IOfflineFilesEvents * This, LPCWSTR pszConflictPath, const FILETIME * pftConflictDateTime, OFFLINEFILES_SYNC_STATE ConflictSyncState);
	HRESULT(STDMETHODCALLTYPE * SyncEnd) (IOfflineFilesEvents * This, REFGUID rSyncId, HRESULT hrResult);
	HRESULT(STDMETHODCALLTYPE * NetTransportArrived) (IOfflineFilesEvents * This);
	HRESULT(STDMETHODCALLTYPE * NoNetTransports) (IOfflineFilesEvents * This);
	HRESULT(STDMETHODCALLTYPE * ItemDisconnected) (IOfflineFilesEvents * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemReconnected) (IOfflineFilesEvents * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemAvailableOffline) (IOfflineFilesEvents * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemNotAvailableOffline) (IOfflineFilesEvents * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemPinned) (IOfflineFilesEvents * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemNotPinned) (IOfflineFilesEvents * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemModified) (IOfflineFilesEvents * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType, BOOL bModifiedData, BOOL bModifiedAttributes);
	HRESULT(STDMETHODCALLTYPE * ItemAddedToCache) (IOfflineFilesEvents * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemDeletedFromCache) (IOfflineFilesEvents * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemRenamed) (IOfflineFilesEvents * This, LPCWSTR pszOldPath, LPCWSTR pszNewPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * DataLost) (IOfflineFilesEvents * This);
	HRESULT(STDMETHODCALLTYPE * Ping) (IOfflineFilesEvents * This);
	END_INTERFACE
}  IOfflineFilesEventsVtbl;
interface IOfflineFilesEvents
{
	CONST_VTBL struct IOfflineFilesEventsVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesEvents_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesEvents_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesEvents_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesEvents_CacheMoved(This,pszOldPath,pszNewPath)( (This)->lpVtbl -> CacheMoved(This,pszOldPath,pszNewPath) )
#define IOfflineFilesEvents_CacheIsFull(This)( (This)->lpVtbl -> CacheIsFull(This) )
#define IOfflineFilesEvents_CacheIsCorrupted(This)( (This)->lpVtbl -> CacheIsCorrupted(This) )
#define IOfflineFilesEvents_Enabled(This,bEnabled)( (This)->lpVtbl -> Enabled(This,bEnabled) )
#define IOfflineFilesEvents_EncryptionChanged(This,bWasEncrypted,bWasPartial,bIsEncrypted,bIsPartial)( (This)->lpVtbl -> EncryptionChanged(This,bWasEncrypted,bWasPartial,bIsEncrypted,bIsPartial) )
#define IOfflineFilesEvents_SyncBegin(This,rSyncId)( (This)->lpVtbl -> SyncBegin(This,rSyncId) )
#define IOfflineFilesEvents_SyncFileResult(This,rSyncId,pszFile,hrResult)( (This)->lpVtbl -> SyncFileResult(This,rSyncId,pszFile,hrResult) )
#define IOfflineFilesEvents_SyncConflictRecAdded(This,pszConflictPath,pftConflictDateTime,ConflictSyncState)( (This)->lpVtbl -> SyncConflictRecAdded(This,pszConflictPath,pftConflictDateTime,ConflictSyncState) )
#define IOfflineFilesEvents_SyncConflictRecUpdated(This,pszConflictPath,pftConflictDateTime,ConflictSyncState)( (This)->lpVtbl -> SyncConflictRecUpdated(This,pszConflictPath,pftConflictDateTime,ConflictSyncState) )
#define IOfflineFilesEvents_SyncConflictRecRemoved(This,pszConflictPath,pftConflictDateTime,ConflictSyncState)( (This)->lpVtbl -> SyncConflictRecRemoved(This,pszConflictPath,pftConflictDateTime,ConflictSyncState) )
#define IOfflineFilesEvents_SyncEnd(This,rSyncId,hrResult)( (This)->lpVtbl -> SyncEnd(This,rSyncId,hrResult) )
#define IOfflineFilesEvents_NetTransportArrived(This)( (This)->lpVtbl -> NetTransportArrived(This) )
#define IOfflineFilesEvents_NoNetTransports(This)( (This)->lpVtbl -> NoNetTransports(This) )
#define IOfflineFilesEvents_ItemDisconnected(This,pszPath,ItemType)( (This)->lpVtbl -> ItemDisconnected(This,pszPath,ItemType) )
#define IOfflineFilesEvents_ItemReconnected(This,pszPath,ItemType)( (This)->lpVtbl -> ItemReconnected(This,pszPath,ItemType) )
#define IOfflineFilesEvents_ItemAvailableOffline(This,pszPath,ItemType)( (This)->lpVtbl -> ItemAvailableOffline(This,pszPath,ItemType) )
#define IOfflineFilesEvents_ItemNotAvailableOffline(This,pszPath,ItemType)( (This)->lpVtbl -> ItemNotAvailableOffline(This,pszPath,ItemType) )
#define IOfflineFilesEvents_ItemPinned(This,pszPath,ItemType)( (This)->lpVtbl -> ItemPinned(This,pszPath,ItemType) )
#define IOfflineFilesEvents_ItemNotPinned(This,pszPath,ItemType)( (This)->lpVtbl -> ItemNotPinned(This,pszPath,ItemType) )
#define IOfflineFilesEvents_ItemModified(This,pszPath,ItemType,bModifiedData,bModifiedAttributes)( (This)->lpVtbl -> ItemModified(This,pszPath,ItemType,bModifiedData,bModifiedAttributes) )
#define IOfflineFilesEvents_ItemAddedToCache(This,pszPath,ItemType)( (This)->lpVtbl -> ItemAddedToCache(This,pszPath,ItemType) )
#define IOfflineFilesEvents_ItemDeletedFromCache(This,pszPath,ItemType)( (This)->lpVtbl -> ItemDeletedFromCache(This,pszPath,ItemType) )
#define IOfflineFilesEvents_ItemRenamed(This,pszOldPath,pszNewPath,ItemType)( (This)->lpVtbl -> ItemRenamed(This,pszOldPath,pszNewPath,ItemType) )
#define IOfflineFilesEvents_DataLost(This)( (This)->lpVtbl -> DataLost(This) )
#define IOfflineFilesEvents_Ping(This)( (This)->lpVtbl -> Ping(This) )
#endif
#endif
#ifndef __IOfflineFilesEvents2_INTERFACE_DEFINED__
#define __IOfflineFilesEvents2_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesEvents2;
typedef struct IOfflineFilesEvents2Vtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesEvents2 * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesEvents2 * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesEvents2 * This);
	HRESULT(STDMETHODCALLTYPE * CacheMoved) (IOfflineFilesEvents2 * This, LPCWSTR pszOldPath, LPCWSTR pszNewPath);
	HRESULT(STDMETHODCALLTYPE * CacheIsFull) (IOfflineFilesEvents2 * This);
	HRESULT(STDMETHODCALLTYPE * CacheIsCorrupted) (IOfflineFilesEvents2 * This);
	HRESULT(STDMETHODCALLTYPE * Enabled) (IOfflineFilesEvents2 * This, BOOL bEnabled);
	HRESULT(STDMETHODCALLTYPE * EncryptionChanged) (IOfflineFilesEvents2 * This, BOOL bWasEncrypted, BOOL bWasPartial, BOOL bIsEncrypted, BOOL bIsPartial);
	HRESULT(STDMETHODCALLTYPE * SyncBegin) (IOfflineFilesEvents2 * This, REFGUID rSyncId);
	HRESULT(STDMETHODCALLTYPE * SyncFileResult) (IOfflineFilesEvents2 * This, REFGUID rSyncId, LPCWSTR pszFile, HRESULT hrResult);
	HRESULT(STDMETHODCALLTYPE * SyncConflictRecAdded) (IOfflineFilesEvents2 * This, LPCWSTR pszConflictPath, const FILETIME * pftConflictDateTime, OFFLINEFILES_SYNC_STATE ConflictSyncState);
	HRESULT(STDMETHODCALLTYPE * SyncConflictRecUpdated) (IOfflineFilesEvents2 * This, LPCWSTR pszConflictPath, const FILETIME * pftConflictDateTime, OFFLINEFILES_SYNC_STATE ConflictSyncState);
	HRESULT(STDMETHODCALLTYPE * SyncConflictRecRemoved) (IOfflineFilesEvents2 * This, LPCWSTR pszConflictPath, const FILETIME * pftConflictDateTime, OFFLINEFILES_SYNC_STATE ConflictSyncState);
	HRESULT(STDMETHODCALLTYPE * SyncEnd) (IOfflineFilesEvents2 * This, REFGUID rSyncId, HRESULT hrResult);
	HRESULT(STDMETHODCALLTYPE * NetTransportArrived) (IOfflineFilesEvents2 * This);
	HRESULT(STDMETHODCALLTYPE * NoNetTransports) (IOfflineFilesEvents2 * This);
	HRESULT(STDMETHODCALLTYPE * ItemDisconnected) (IOfflineFilesEvents2 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemReconnected) (IOfflineFilesEvents2 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemAvailableOffline) (IOfflineFilesEvents2 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemNotAvailableOffline) (IOfflineFilesEvents2 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemPinned) (IOfflineFilesEvents2 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemNotPinned) (IOfflineFilesEvents2 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemModified) (IOfflineFilesEvents2 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType, BOOL bModifiedData, BOOL bModifiedAttributes);
	HRESULT(STDMETHODCALLTYPE * ItemAddedToCache) (IOfflineFilesEvents2 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemDeletedFromCache) (IOfflineFilesEvents2 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemRenamed) (IOfflineFilesEvents2 * This, LPCWSTR pszOldPath, LPCWSTR pszNewPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * DataLost) (IOfflineFilesEvents2 * This);
	HRESULT(STDMETHODCALLTYPE * Ping) (IOfflineFilesEvents2 * This);
	HRESULT(STDMETHODCALLTYPE * ItemReconnectBegin) (IOfflineFilesEvents2 * This);
	HRESULT(STDMETHODCALLTYPE * ItemReconnectEnd) (IOfflineFilesEvents2 * This);
	HRESULT(STDMETHODCALLTYPE * CacheEvictBegin) (IOfflineFilesEvents2 * This);
	HRESULT(STDMETHODCALLTYPE * CacheEvictEnd) (IOfflineFilesEvents2 * This);
	HRESULT(STDMETHODCALLTYPE * BackgroundSyncBegin) (IOfflineFilesEvents2 * This, DWORD dwSyncControlFlags);
	HRESULT(STDMETHODCALLTYPE * BackgroundSyncEnd) (IOfflineFilesEvents2 * This, DWORD dwSyncControlFlags);
	HRESULT(STDMETHODCALLTYPE * PolicyChangeDetected) (IOfflineFilesEvents2 * This);
	HRESULT(STDMETHODCALLTYPE * PreferenceChangeDetected) (IOfflineFilesEvents2 * This);
	HRESULT(STDMETHODCALLTYPE * SettingsChangesApplied) (IOfflineFilesEvents2 * This);
	END_INTERFACE
}  IOfflineFilesEvents2Vtbl;
interface IOfflineFilesEvents2
{
	CONST_VTBL struct IOfflineFilesEvents2Vtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesEvents2_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesEvents2_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesEvents2_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesEvents2_CacheMoved(This,pszOldPath,pszNewPath)( (This)->lpVtbl -> CacheMoved(This,pszOldPath,pszNewPath) )
#define IOfflineFilesEvents2_CacheIsFull(This)( (This)->lpVtbl -> CacheIsFull(This) )
#define IOfflineFilesEvents2_CacheIsCorrupted(This)( (This)->lpVtbl -> CacheIsCorrupted(This) )
#define IOfflineFilesEvents2_Enabled(This,bEnabled)( (This)->lpVtbl -> Enabled(This,bEnabled) )
#define IOfflineFilesEvents2_EncryptionChanged(This,bWasEncrypted,bWasPartial,bIsEncrypted,bIsPartial)( (This)->lpVtbl -> EncryptionChanged(This,bWasEncrypted,bWasPartial,bIsEncrypted,bIsPartial) )
#define IOfflineFilesEvents2_SyncBegin(This,rSyncId)( (This)->lpVtbl -> SyncBegin(This,rSyncId) )
#define IOfflineFilesEvents2_SyncFileResult(This,rSyncId,pszFile,hrResult)( (This)->lpVtbl -> SyncFileResult(This,rSyncId,pszFile,hrResult) )
#define IOfflineFilesEvents2_SyncConflictRecAdded(This,pszConflictPath,pftConflictDateTime,ConflictSyncState)( (This)->lpVtbl -> SyncConflictRecAdded(This,pszConflictPath,pftConflictDateTime,ConflictSyncState) )
#define IOfflineFilesEvents2_SyncConflictRecUpdated(This,pszConflictPath,pftConflictDateTime,ConflictSyncState)( (This)->lpVtbl -> SyncConflictRecUpdated(This,pszConflictPath,pftConflictDateTime,ConflictSyncState) )
#define IOfflineFilesEvents2_SyncConflictRecRemoved(This,pszConflictPath,pftConflictDateTime,ConflictSyncState)( (This)->lpVtbl -> SyncConflictRecRemoved(This,pszConflictPath,pftConflictDateTime,ConflictSyncState) )
#define IOfflineFilesEvents2_SyncEnd(This,rSyncId,hrResult)( (This)->lpVtbl -> SyncEnd(This,rSyncId,hrResult) )
#define IOfflineFilesEvents2_NetTransportArrived(This)( (This)->lpVtbl -> NetTransportArrived(This) )
#define IOfflineFilesEvents2_NoNetTransports(This)( (This)->lpVtbl -> NoNetTransports(This) )
#define IOfflineFilesEvents2_ItemDisconnected(This,pszPath,ItemType)( (This)->lpVtbl -> ItemDisconnected(This,pszPath,ItemType) )
#define IOfflineFilesEvents2_ItemReconnected(This,pszPath,ItemType)( (This)->lpVtbl -> ItemReconnected(This,pszPath,ItemType) )
#define IOfflineFilesEvents2_ItemAvailableOffline(This,pszPath,ItemType)( (This)->lpVtbl -> ItemAvailableOffline(This,pszPath,ItemType) )
#define IOfflineFilesEvents2_ItemNotAvailableOffline(This,pszPath,ItemType)( (This)->lpVtbl -> ItemNotAvailableOffline(This,pszPath,ItemType) )
#define IOfflineFilesEvents2_ItemPinned(This,pszPath,ItemType)( (This)->lpVtbl -> ItemPinned(This,pszPath,ItemType) )
#define IOfflineFilesEvents2_ItemNotPinned(This,pszPath,ItemType)( (This)->lpVtbl -> ItemNotPinned(This,pszPath,ItemType) )
#define IOfflineFilesEvents2_ItemModified(This,pszPath,ItemType,bModifiedData,bModifiedAttributes)( (This)->lpVtbl -> ItemModified(This,pszPath,ItemType,bModifiedData,bModifiedAttributes) )
#define IOfflineFilesEvents2_ItemAddedToCache(This,pszPath,ItemType)( (This)->lpVtbl -> ItemAddedToCache(This,pszPath,ItemType) )
#define IOfflineFilesEvents2_ItemDeletedFromCache(This,pszPath,ItemType)( (This)->lpVtbl -> ItemDeletedFromCache(This,pszPath,ItemType) )
#define IOfflineFilesEvents2_ItemRenamed(This,pszOldPath,pszNewPath,ItemType)( (This)->lpVtbl -> ItemRenamed(This,pszOldPath,pszNewPath,ItemType) )
#define IOfflineFilesEvents2_DataLost(This)( (This)->lpVtbl -> DataLost(This) )
#define IOfflineFilesEvents2_Ping(This)( (This)->lpVtbl -> Ping(This) )
#define IOfflineFilesEvents2_ItemReconnectBegin(This)( (This)->lpVtbl -> ItemReconnectBegin(This) )
#define IOfflineFilesEvents2_ItemReconnectEnd(This)( (This)->lpVtbl -> ItemReconnectEnd(This) )
#define IOfflineFilesEvents2_CacheEvictBegin(This)( (This)->lpVtbl -> CacheEvictBegin(This) )
#define IOfflineFilesEvents2_CacheEvictEnd(This)( (This)->lpVtbl -> CacheEvictEnd(This) )
#define IOfflineFilesEvents2_BackgroundSyncBegin(This,dwSyncControlFlags)( (This)->lpVtbl -> BackgroundSyncBegin(This,dwSyncControlFlags) )
#define IOfflineFilesEvents2_BackgroundSyncEnd(This,dwSyncControlFlags)( (This)->lpVtbl -> BackgroundSyncEnd(This,dwSyncControlFlags) )
#define IOfflineFilesEvents2_PolicyChangeDetected(This)( (This)->lpVtbl -> PolicyChangeDetected(This) )
#define IOfflineFilesEvents2_PreferenceChangeDetected(This)( (This)->lpVtbl -> PreferenceChangeDetected(This) )
#define IOfflineFilesEvents2_SettingsChangesApplied(This)( (This)->lpVtbl -> SettingsChangesApplied(This) )
#endif
#endif
#ifndef __IOfflineFilesEvents3_INTERFACE_DEFINED__
#define __IOfflineFilesEvents3_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesEvents3;
typedef struct IOfflineFilesEvents3Vtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesEvents3 * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesEvents3 * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * CacheMoved) (IOfflineFilesEvents3 * This, LPCWSTR pszOldPath, LPCWSTR pszNewPath);
	HRESULT(STDMETHODCALLTYPE * CacheIsFull) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * CacheIsCorrupted) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * Enabled) (IOfflineFilesEvents3 * This, BOOL bEnabled);
	HRESULT(STDMETHODCALLTYPE * EncryptionChanged) (IOfflineFilesEvents3 * This, BOOL bWasEncrypted, BOOL bWasPartial, BOOL bIsEncrypted, BOOL bIsPartial);
	HRESULT(STDMETHODCALLTYPE * SyncBegin) (IOfflineFilesEvents3 * This, REFGUID rSyncId);
	HRESULT(STDMETHODCALLTYPE * SyncFileResult) (IOfflineFilesEvents3 * This, REFGUID rSyncId, LPCWSTR pszFile, HRESULT hrResult);
	HRESULT(STDMETHODCALLTYPE * SyncConflictRecAdded) (IOfflineFilesEvents3 * This, LPCWSTR pszConflictPath, const FILETIME * pftConflictDateTime, OFFLINEFILES_SYNC_STATE ConflictSyncState);
	HRESULT(STDMETHODCALLTYPE * SyncConflictRecUpdated) (IOfflineFilesEvents3 * This, LPCWSTR pszConflictPath, const FILETIME * pftConflictDateTime, OFFLINEFILES_SYNC_STATE ConflictSyncState);
	HRESULT(STDMETHODCALLTYPE * SyncConflictRecRemoved) (IOfflineFilesEvents3 * This, LPCWSTR pszConflictPath, const FILETIME * pftConflictDateTime, OFFLINEFILES_SYNC_STATE ConflictSyncState);
	HRESULT(STDMETHODCALLTYPE * SyncEnd) (IOfflineFilesEvents3 * This, REFGUID rSyncId, HRESULT hrResult);
	HRESULT(STDMETHODCALLTYPE * NetTransportArrived) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * NoNetTransports) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * ItemDisconnected) (IOfflineFilesEvents3 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemReconnected) (IOfflineFilesEvents3 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemAvailableOffline) (IOfflineFilesEvents3 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemNotAvailableOffline) (IOfflineFilesEvents3 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemPinned) (IOfflineFilesEvents3 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemNotPinned) (IOfflineFilesEvents3 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemModified) (IOfflineFilesEvents3 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType, BOOL bModifiedData, BOOL bModifiedAttributes);
	HRESULT(STDMETHODCALLTYPE * ItemAddedToCache) (IOfflineFilesEvents3 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemDeletedFromCache) (IOfflineFilesEvents3 * This, LPCWSTR pszPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * ItemRenamed) (IOfflineFilesEvents3 * This, LPCWSTR pszOldPath, LPCWSTR pszNewPath, OFFLINEFILES_ITEM_TYPE ItemType);
	HRESULT(STDMETHODCALLTYPE * DataLost) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * Ping) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * ItemReconnectBegin) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * ItemReconnectEnd) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * CacheEvictBegin) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * CacheEvictEnd) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * BackgroundSyncBegin) (IOfflineFilesEvents3 * This, DWORD dwSyncControlFlags);
	HRESULT(STDMETHODCALLTYPE * BackgroundSyncEnd) (IOfflineFilesEvents3 * This, DWORD dwSyncControlFlags);
	HRESULT(STDMETHODCALLTYPE * PolicyChangeDetected) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * PreferenceChangeDetected) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * SettingsChangesApplied) (IOfflineFilesEvents3 * This);
	HRESULT(STDMETHODCALLTYPE * TransparentCacheItemNotify) (IOfflineFilesEvents3 * This, LPCWSTR pszPath, OFFLINEFILES_EVENTS EventType, OFFLINEFILES_ITEM_TYPE ItemType, BOOL bModifiedData, BOOL bModifiedAttributes, LPCWSTR pzsOldPath);
	HRESULT(STDMETHODCALLTYPE * PrefetchFileBegin) (IOfflineFilesEvents3 * This, LPCWSTR pszPath);
	HRESULT(STDMETHODCALLTYPE * PrefetchFileEnd) (IOfflineFilesEvents3 * This, LPCWSTR pszPath, HRESULT hrResult);
	END_INTERFACE
}  IOfflineFilesEvents3Vtbl;
interface IOfflineFilesEvents3
{
	CONST_VTBL struct IOfflineFilesEvents3Vtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesEvents3_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesEvents3_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesEvents3_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesEvents3_CacheMoved(This,pszOldPath,pszNewPath)( (This)->lpVtbl -> CacheMoved(This,pszOldPath,pszNewPath) )
#define IOfflineFilesEvents3_CacheIsFull(This)( (This)->lpVtbl -> CacheIsFull(This) )
#define IOfflineFilesEvents3_CacheIsCorrupted(This)( (This)->lpVtbl -> CacheIsCorrupted(This) )
#define IOfflineFilesEvents3_Enabled(This,bEnabled)( (This)->lpVtbl -> Enabled(This,bEnabled) )
#define IOfflineFilesEvents3_EncryptionChanged(This,bWasEncrypted,bWasPartial,bIsEncrypted,bIsPartial)( (This)->lpVtbl -> EncryptionChanged(This,bWasEncrypted,bWasPartial,bIsEncrypted,bIsPartial) )
#define IOfflineFilesEvents3_SyncBegin(This,rSyncId)( (This)->lpVtbl -> SyncBegin(This,rSyncId) )
#define IOfflineFilesEvents3_SyncFileResult(This,rSyncId,pszFile,hrResult)( (This)->lpVtbl -> SyncFileResult(This,rSyncId,pszFile,hrResult) )
#define IOfflineFilesEvents3_SyncConflictRecAdded(This,pszConflictPath,pftConflictDateTime,ConflictSyncState)( (This)->lpVtbl -> SyncConflictRecAdded(This,pszConflictPath,pftConflictDateTime,ConflictSyncState) )
#define IOfflineFilesEvents3_SyncConflictRecUpdated(This,pszConflictPath,pftConflictDateTime,ConflictSyncState)( (This)->lpVtbl -> SyncConflictRecUpdated(This,pszConflictPath,pftConflictDateTime,ConflictSyncState) )
#define IOfflineFilesEvents3_SyncConflictRecRemoved(This,pszConflictPath,pftConflictDateTime,ConflictSyncState)( (This)->lpVtbl -> SyncConflictRecRemoved(This,pszConflictPath,pftConflictDateTime,ConflictSyncState) )
#define IOfflineFilesEvents3_SyncEnd(This,rSyncId,hrResult)( (This)->lpVtbl -> SyncEnd(This,rSyncId,hrResult) )
#define IOfflineFilesEvents3_NetTransportArrived(This)( (This)->lpVtbl -> NetTransportArrived(This) )
#define IOfflineFilesEvents3_NoNetTransports(This)( (This)->lpVtbl -> NoNetTransports(This) )
#define IOfflineFilesEvents3_ItemDisconnected(This,pszPath,ItemType)( (This)->lpVtbl -> ItemDisconnected(This,pszPath,ItemType) )
#define IOfflineFilesEvents3_ItemReconnected(This,pszPath,ItemType)( (This)->lpVtbl -> ItemReconnected(This,pszPath,ItemType) )
#define IOfflineFilesEvents3_ItemAvailableOffline(This,pszPath,ItemType)( (This)->lpVtbl -> ItemAvailableOffline(This,pszPath,ItemType) )
#define IOfflineFilesEvents3_ItemNotAvailableOffline(This,pszPath,ItemType)( (This)->lpVtbl -> ItemNotAvailableOffline(This,pszPath,ItemType) )
#define IOfflineFilesEvents3_ItemPinned(This,pszPath,ItemType)( (This)->lpVtbl -> ItemPinned(This,pszPath,ItemType) )
#define IOfflineFilesEvents3_ItemNotPinned(This,pszPath,ItemType)( (This)->lpVtbl -> ItemNotPinned(This,pszPath,ItemType) )
#define IOfflineFilesEvents3_ItemModified(This,pszPath,ItemType,bModifiedData,bModifiedAttributes)( (This)->lpVtbl -> ItemModified(This,pszPath,ItemType,bModifiedData,bModifiedAttributes) )
#define IOfflineFilesEvents3_ItemAddedToCache(This,pszPath,ItemType)( (This)->lpVtbl -> ItemAddedToCache(This,pszPath,ItemType) )
#define IOfflineFilesEvents3_ItemDeletedFromCache(This,pszPath,ItemType)( (This)->lpVtbl -> ItemDeletedFromCache(This,pszPath,ItemType) )
#define IOfflineFilesEvents3_ItemRenamed(This,pszOldPath,pszNewPath,ItemType)( (This)->lpVtbl -> ItemRenamed(This,pszOldPath,pszNewPath,ItemType) )
#define IOfflineFilesEvents3_DataLost(This)( (This)->lpVtbl -> DataLost(This) )
#define IOfflineFilesEvents3_Ping(This)( (This)->lpVtbl -> Ping(This) )
#define IOfflineFilesEvents3_ItemReconnectBegin(This)( (This)->lpVtbl -> ItemReconnectBegin(This) )
#define IOfflineFilesEvents3_ItemReconnectEnd(This)( (This)->lpVtbl -> ItemReconnectEnd(This) )
#define IOfflineFilesEvents3_CacheEvictBegin(This)( (This)->lpVtbl -> CacheEvictBegin(This) )
#define IOfflineFilesEvents3_CacheEvictEnd(This)( (This)->lpVtbl -> CacheEvictEnd(This) )
#define IOfflineFilesEvents3_BackgroundSyncBegin(This,dwSyncControlFlags)( (This)->lpVtbl -> BackgroundSyncBegin(This,dwSyncControlFlags) )
#define IOfflineFilesEvents3_BackgroundSyncEnd(This,dwSyncControlFlags)( (This)->lpVtbl -> BackgroundSyncEnd(This,dwSyncControlFlags) )
#define IOfflineFilesEvents3_PolicyChangeDetected(This)( (This)->lpVtbl -> PolicyChangeDetected(This) )
#define IOfflineFilesEvents3_PreferenceChangeDetected(This)( (This)->lpVtbl -> PreferenceChangeDetected(This) )
#define IOfflineFilesEvents3_SettingsChangesApplied(This)( (This)->lpVtbl -> SettingsChangesApplied(This) )
#define IOfflineFilesEvents3_TransparentCacheItemNotify(This,pszPath,EventType,ItemType,bModifiedData,bModifiedAttributes,pzsOldPath)( (This)->lpVtbl -> TransparentCacheItemNotify(This,pszPath,EventType,ItemType,bModifiedData,bModifiedAttributes,pzsOldPath) )
#define IOfflineFilesEvents3_PrefetchFileBegin(This,pszPath)( (This)->lpVtbl -> PrefetchFileBegin(This,pszPath) )
#define IOfflineFilesEvents3_PrefetchFileEnd(This,pszPath,hrResult)( (This)->lpVtbl -> PrefetchFileEnd(This,pszPath,hrResult) )
#endif
#endif
#ifndef __IOfflineFilesEventsFilter_INTERFACE_DEFINED__
#define __IOfflineFilesEventsFilter_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesEventsFilter;
typedef struct IOfflineFilesEventsFilterVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesEventsFilter * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesEventsFilter * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesEventsFilter * This);
	HRESULT(STDMETHODCALLTYPE * GetPathFilter) (IOfflineFilesEventsFilter * This, LPWSTR * ppszFilter, OFFLINEFILES_PATHFILTER_MATCH * pMatch);
	HRESULT(STDMETHODCALLTYPE * GetIncludedEvents) (IOfflineFilesEventsFilter * This, ULONG cElements, OFFLINEFILES_EVENTS * prgEvents, ULONG * pcEvents);
	HRESULT(STDMETHODCALLTYPE * GetExcludedEvents) (IOfflineFilesEventsFilter * This, ULONG cElements, OFFLINEFILES_EVENTS * prgEvents, ULONG * pcEvents);
	END_INTERFACE
}  IOfflineFilesEventsFilterVtbl;
interface IOfflineFilesEventsFilter
{
	CONST_VTBL struct IOfflineFilesEventsFilterVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesEventsFilter_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesEventsFilter_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesEventsFilter_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesEventsFilter_GetPathFilter(This,ppszFilter,pMatch)( (This)->lpVtbl -> GetPathFilter(This,ppszFilter,pMatch) )
#define IOfflineFilesEventsFilter_GetIncludedEvents(This,cElements,prgEvents,pcEvents)( (This)->lpVtbl -> GetIncludedEvents(This,cElements,prgEvents,pcEvents) )
#define IOfflineFilesEventsFilter_GetExcludedEvents(This,cElements,prgEvents,pcEvents)( (This)->lpVtbl -> GetExcludedEvents(This,cElements,prgEvents,pcEvents) )
#endif
#endif
#ifndef __IOfflineFilesErrorInfo_INTERFACE_DEFINED__
#define __IOfflineFilesErrorInfo_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesErrorInfo;
typedef struct IOfflineFilesErrorInfoVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesErrorInfo * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesErrorInfo * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesErrorInfo * This);
	HRESULT(STDMETHODCALLTYPE * GetRawData) (IOfflineFilesErrorInfo * This, BYTE_BLOB ** ppBlob);
	HRESULT(STDMETHODCALLTYPE * GetDescription) (IOfflineFilesErrorInfo * This, LPWSTR * ppszDescription);
	END_INTERFACE
}  IOfflineFilesErrorInfoVtbl;
interface IOfflineFilesErrorInfo
{
	CONST_VTBL struct IOfflineFilesErrorInfoVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesErrorInfo_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesErrorInfo_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesErrorInfo_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesErrorInfo_GetRawData(This,ppBlob)( (This)->lpVtbl -> GetRawData(This,ppBlob) )
#define IOfflineFilesErrorInfo_GetDescription(This,ppszDescription)( (This)->lpVtbl -> GetDescription(This,ppszDescription) )
#endif
#endif
#ifndef __IOfflineFilesSyncErrorItemInfo_INTERFACE_DEFINED__
#define __IOfflineFilesSyncErrorItemInfo_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesSyncErrorItemInfo;
typedef struct IOfflineFilesSyncErrorItemInfoVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesSyncErrorItemInfo * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesSyncErrorItemInfo * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesSyncErrorItemInfo * This);
	HRESULT(STDMETHODCALLTYPE * GetFileAttributes) (IOfflineFilesSyncErrorItemInfo * This, DWORD * pdwAttributes);
	HRESULT(STDMETHODCALLTYPE * GetFileTimes) (IOfflineFilesSyncErrorItemInfo * This, FILETIME * pftLastWrite, FILETIME * pftChange);
	HRESULT(STDMETHODCALLTYPE * GetFileSize) (IOfflineFilesSyncErrorItemInfo * This, LARGE_INTEGER * pSize);
	END_INTERFACE
}  IOfflineFilesSyncErrorItemInfoVtbl;
interface IOfflineFilesSyncErrorItemInfo
{
	CONST_VTBL struct IOfflineFilesSyncErrorItemInfoVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesSyncErrorItemInfo_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesSyncErrorItemInfo_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesSyncErrorItemInfo_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesSyncErrorItemInfo_GetFileAttributes(This,pdwAttributes)( (This)->lpVtbl -> GetFileAttributes(This,pdwAttributes) )
#define IOfflineFilesSyncErrorItemInfo_GetFileTimes(This,pftLastWrite,pftChange)( (This)->lpVtbl -> GetFileTimes(This,pftLastWrite,pftChange) )
#define IOfflineFilesSyncErrorItemInfo_GetFileSize(This,pSize)( (This)->lpVtbl -> GetFileSize(This,pSize) )
#endif
#endif
#ifndef __IOfflineFilesSyncErrorInfo_INTERFACE_DEFINED__
#define __IOfflineFilesSyncErrorInfo_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesSyncErrorInfo;
typedef struct IOfflineFilesSyncErrorInfoVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesSyncErrorInfo * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesSyncErrorInfo * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesSyncErrorInfo * This);
	HRESULT(STDMETHODCALLTYPE * GetRawData) (IOfflineFilesSyncErrorInfo * This, BYTE_BLOB ** ppBlob);
	HRESULT(STDMETHODCALLTYPE * GetDescription) (IOfflineFilesSyncErrorInfo * This, LPWSTR * ppszDescription);
	HRESULT(STDMETHODCALLTYPE * GetSyncOperation) (IOfflineFilesSyncErrorInfo * This, OFFLINEFILES_SYNC_OPERATION * pSyncOp);
	HRESULT(STDMETHODCALLTYPE * GetItemChangeFlags) (IOfflineFilesSyncErrorInfo * This, DWORD * pdwItemChangeFlags);
	HRESULT(STDMETHODCALLTYPE * InfoEnumerated) (IOfflineFilesSyncErrorInfo * This, BOOL * pbLocalEnumerated, BOOL * pbRemoteEnumerated, BOOL * pbOriginalEnumerated);
	HRESULT(STDMETHODCALLTYPE * InfoAvailable) (IOfflineFilesSyncErrorInfo * This, BOOL * pbLocalInfo, BOOL * pbRemoteInfo, BOOL * pbOriginalInfo);
	HRESULT(STDMETHODCALLTYPE * GetLocalInfo) (IOfflineFilesSyncErrorInfo * This, IOfflineFilesSyncErrorItemInfo ** ppInfo);
	HRESULT(STDMETHODCALLTYPE * GetRemoteInfo) (IOfflineFilesSyncErrorInfo * This, IOfflineFilesSyncErrorItemInfo ** ppInfo);
	HRESULT(STDMETHODCALLTYPE * GetOriginalInfo) (IOfflineFilesSyncErrorInfo * This, IOfflineFilesSyncErrorItemInfo ** ppInfo);
	END_INTERFACE
}  IOfflineFilesSyncErrorInfoVtbl;
interface IOfflineFilesSyncErrorInfo
{
	CONST_VTBL struct IOfflineFilesSyncErrorInfoVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesSyncErrorInfo_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesSyncErrorInfo_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesSyncErrorInfo_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesSyncErrorInfo_GetRawData(This,ppBlob)( (This)->lpVtbl -> GetRawData(This,ppBlob) )
#define IOfflineFilesSyncErrorInfo_GetDescription(This,ppszDescription)( (This)->lpVtbl -> GetDescription(This,ppszDescription) )
#define IOfflineFilesSyncErrorInfo_GetSyncOperation(This,pSyncOp)( (This)->lpVtbl -> GetSyncOperation(This,pSyncOp) )
#define IOfflineFilesSyncErrorInfo_GetItemChangeFlags(This,pdwItemChangeFlags)( (This)->lpVtbl -> GetItemChangeFlags(This,pdwItemChangeFlags) )
#define IOfflineFilesSyncErrorInfo_InfoEnumerated(This,pbLocalEnumerated,pbRemoteEnumerated,pbOriginalEnumerated)( (This)->lpVtbl -> InfoEnumerated(This,pbLocalEnumerated,pbRemoteEnumerated,pbOriginalEnumerated) )
#define IOfflineFilesSyncErrorInfo_InfoAvailable(This,pbLocalInfo,pbRemoteInfo,pbOriginalInfo)( (This)->lpVtbl -> InfoAvailable(This,pbLocalInfo,pbRemoteInfo,pbOriginalInfo) )
#define IOfflineFilesSyncErrorInfo_GetLocalInfo(This,ppInfo)( (This)->lpVtbl -> GetLocalInfo(This,ppInfo) )
#define IOfflineFilesSyncErrorInfo_GetRemoteInfo(This,ppInfo)( (This)->lpVtbl -> GetRemoteInfo(This,ppInfo) )
#define IOfflineFilesSyncErrorInfo_GetOriginalInfo(This,ppInfo)( (This)->lpVtbl -> GetOriginalInfo(This,ppInfo) )
#endif
#endif
#ifndef __IOfflineFilesProgress_INTERFACE_DEFINED__
#define __IOfflineFilesProgress_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesProgress;
typedef struct IOfflineFilesProgressVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesProgress * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesProgress * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesProgress * This);
	HRESULT(STDMETHODCALLTYPE * Begin) (IOfflineFilesProgress * This, BOOL * pbAbort);
	HRESULT(STDMETHODCALLTYPE * QueryAbort) (IOfflineFilesProgress * This, BOOL * pbAbort);
	HRESULT(STDMETHODCALLTYPE * End) (IOfflineFilesProgress * This, HRESULT hrResult);
	END_INTERFACE
}  IOfflineFilesProgressVtbl;
interface IOfflineFilesProgress
{
	CONST_VTBL struct IOfflineFilesProgressVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesProgress_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesProgress_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesProgress_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesProgress_Begin(This,pbAbort)( (This)->lpVtbl -> Begin(This,pbAbort) )
#define IOfflineFilesProgress_QueryAbort(This,pbAbort)( (This)->lpVtbl -> QueryAbort(This,pbAbort) )
#define IOfflineFilesProgress_End(This,hrResult)( (This)->lpVtbl -> End(This,hrResult) )
#endif
#endif
#ifndef __IOfflineFilesSimpleProgress_INTERFACE_DEFINED__
#define __IOfflineFilesSimpleProgress_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesSimpleProgress;
typedef struct IOfflineFilesSimpleProgressVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesSimpleProgress * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesSimpleProgress * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesSimpleProgress * This);
	HRESULT(STDMETHODCALLTYPE * Begin) (IOfflineFilesSimpleProgress * This, BOOL * pbAbort);
	HRESULT(STDMETHODCALLTYPE * QueryAbort) (IOfflineFilesSimpleProgress * This, BOOL * pbAbort);
	HRESULT(STDMETHODCALLTYPE * End) (IOfflineFilesSimpleProgress * This, HRESULT hrResult);
	HRESULT(STDMETHODCALLTYPE * ItemBegin) (IOfflineFilesSimpleProgress * This, LPCWSTR pszFile, OFFLINEFILES_OP_RESPONSE * pResponse);
	HRESULT(STDMETHODCALLTYPE * ItemResult) (IOfflineFilesSimpleProgress * This, LPCWSTR pszFile, HRESULT hrResult, OFFLINEFILES_OP_RESPONSE * pResponse);
	END_INTERFACE
}  IOfflineFilesSimpleProgressVtbl;
interface IOfflineFilesSimpleProgress
{
	CONST_VTBL struct IOfflineFilesSimpleProgressVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesSimpleProgress_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesSimpleProgress_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesSimpleProgress_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesSimpleProgress_Begin(This,pbAbort)( (This)->lpVtbl -> Begin(This,pbAbort) )
#define IOfflineFilesSimpleProgress_QueryAbort(This,pbAbort)( (This)->lpVtbl -> QueryAbort(This,pbAbort) )
#define IOfflineFilesSimpleProgress_End(This,hrResult)( (This)->lpVtbl -> End(This,hrResult) )
#define IOfflineFilesSimpleProgress_ItemBegin(This,pszFile,pResponse)( (This)->lpVtbl -> ItemBegin(This,pszFile,pResponse) )
#define IOfflineFilesSimpleProgress_ItemResult(This,pszFile,hrResult,pResponse)( (This)->lpVtbl -> ItemResult(This,pszFile,hrResult,pResponse) )
#endif
#endif
#ifndef __IOfflineFilesSyncProgress_INTERFACE_DEFINED__
#define __IOfflineFilesSyncProgress_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesSyncProgress;
typedef struct IOfflineFilesSyncProgressVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesSyncProgress * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesSyncProgress * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesSyncProgress * This);
	HRESULT(STDMETHODCALLTYPE * Begin) (IOfflineFilesSyncProgress * This, BOOL * pbAbort);
	HRESULT(STDMETHODCALLTYPE * QueryAbort) (IOfflineFilesSyncProgress * This, BOOL * pbAbort);
	HRESULT(STDMETHODCALLTYPE * End) (IOfflineFilesSyncProgress * This, HRESULT hrResult);
	HRESULT(STDMETHODCALLTYPE * SyncItemBegin) (IOfflineFilesSyncProgress * This, LPCWSTR pszFile, OFFLINEFILES_OP_RESPONSE * pResponse);
	HRESULT(STDMETHODCALLTYPE * SyncItemResult) (IOfflineFilesSyncProgress * This, LPCWSTR pszFile, HRESULT hrResult, IOfflineFilesSyncErrorInfo * pErrorInfo, OFFLINEFILES_OP_RESPONSE * pResponse);
	END_INTERFACE
}  IOfflineFilesSyncProgressVtbl;
interface IOfflineFilesSyncProgress
{
	CONST_VTBL struct IOfflineFilesSyncProgressVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesSyncProgress_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesSyncProgress_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesSyncProgress_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesSyncProgress_Begin(This,pbAbort)( (This)->lpVtbl -> Begin(This,pbAbort) )
#define IOfflineFilesSyncProgress_QueryAbort(This,pbAbort)( (This)->lpVtbl -> QueryAbort(This,pbAbort) )
#define IOfflineFilesSyncProgress_End(This,hrResult)( (This)->lpVtbl -> End(This,hrResult) )
#define IOfflineFilesSyncProgress_SyncItemBegin(This,pszFile,pResponse)( (This)->lpVtbl -> SyncItemBegin(This,pszFile,pResponse) )
#define IOfflineFilesSyncProgress_SyncItemResult(This,pszFile,hrResult,pErrorInfo,pResponse)( (This)->lpVtbl -> SyncItemResult(This,pszFile,hrResult,pErrorInfo,pResponse) )
#endif
#endif
#ifndef __IOfflineFilesSyncConflictHandler_INTERFACE_DEFINED__
#define __IOfflineFilesSyncConflictHandler_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesSyncConflictHandler;
typedef struct IOfflineFilesSyncConflictHandlerVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesSyncConflictHandler * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesSyncConflictHandler * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesSyncConflictHandler * This);
	HRESULT(STDMETHODCALLTYPE * ResolveConflict) (IOfflineFilesSyncConflictHandler * This, LPCWSTR pszPath, DWORD fStateKnown, OFFLINEFILES_SYNC_STATE state, DWORD fChangeDetails, OFFLINEFILES_SYNC_CONFLICT_RESOLVE * pConflictResolution, LPWSTR * ppszNewName);
	END_INTERFACE
}  IOfflineFilesSyncConflictHandlerVtbl;
interface IOfflineFilesSyncConflictHandler
{
	CONST_VTBL struct IOfflineFilesSyncConflictHandlerVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesSyncConflictHandler_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesSyncConflictHandler_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesSyncConflictHandler_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesSyncConflictHandler_ResolveConflict(This,pszPath,fStateKnown,state,fChangeDetails,pConflictResolution,ppszNewName)( (This)->lpVtbl -> ResolveConflict(This,pszPath,fStateKnown,state,fChangeDetails,pConflictResolution,ppszNewName) )
#endif
#endif
#ifndef __IOfflineFilesItemFilter_INTERFACE_DEFINED__
#define __IOfflineFilesItemFilter_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesItemFilter;
typedef struct IOfflineFilesItemFilterVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesItemFilter * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesItemFilter * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesItemFilter * This);
	HRESULT(STDMETHODCALLTYPE * GetFilterFlags) (IOfflineFilesItemFilter * This, ULONGLONG * pullFlags, ULONGLONG * pullMask);
	HRESULT(STDMETHODCALLTYPE * GetTimeFilter) (IOfflineFilesItemFilter * This, FILETIME * pftTime, BOOL * pbEvalTimeOfDay, OFFLINEFILES_ITEM_TIME * pTimeType, OFFLINEFILES_COMPARE * pCompare);
	HRESULT(STDMETHODCALLTYPE * GetPatternFilter) (IOfflineFilesItemFilter * This, LPWSTR pszPattern, ULONG cchPattern);
	END_INTERFACE
}  IOfflineFilesItemFilterVtbl;
interface IOfflineFilesItemFilter
{
	CONST_VTBL struct IOfflineFilesItemFilterVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesItemFilter_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesItemFilter_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesItemFilter_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesItemFilter_GetFilterFlags(This,pullFlags,pullMask)( (This)->lpVtbl -> GetFilterFlags(This,pullFlags,pullMask) )
#define IOfflineFilesItemFilter_GetTimeFilter(This,pftTime,pbEvalTimeOfDay,pTimeType,pCompare)( (This)->lpVtbl -> GetTimeFilter(This,pftTime,pbEvalTimeOfDay,pTimeType,pCompare) )
#define IOfflineFilesItemFilter_GetPatternFilter(This,pszPattern,cchPattern)( (This)->lpVtbl -> GetPatternFilter(This,pszPattern,cchPattern) )
#endif
#endif
#ifndef __IOfflineFilesItem_INTERFACE_DEFINED__
#define __IOfflineFilesItem_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesItem;
typedef struct IOfflineFilesItemVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesItem * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesItem * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesItem * This);
	HRESULT(STDMETHODCALLTYPE * GetItemType) (IOfflineFilesItem * This, OFFLINEFILES_ITEM_TYPE * pItemType);
	HRESULT(STDMETHODCALLTYPE * GetPath) (IOfflineFilesItem * This, LPWSTR * ppszPath);
	HRESULT(STDMETHODCALLTYPE * GetParentItem) (IOfflineFilesItem * This, IOfflineFilesItem ** ppItem);
	HRESULT(STDMETHODCALLTYPE * Refresh) (IOfflineFilesItem * This, DWORD dwQueryFlags);
	HRESULT(STDMETHODCALLTYPE * IsMarkedForDeletion) (IOfflineFilesItem * This, BOOL * pbMarkedForDeletion);
	END_INTERFACE
}  IOfflineFilesItemVtbl;
interface IOfflineFilesItem
{
	CONST_VTBL struct IOfflineFilesItemVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesItem_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesItem_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesItem_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesItem_GetItemType(This,pItemType)( (This)->lpVtbl -> GetItemType(This,pItemType) )
#define IOfflineFilesItem_GetPath(This,ppszPath)( (This)->lpVtbl -> GetPath(This,ppszPath) )
#define IOfflineFilesItem_GetParentItem(This,ppItem)( (This)->lpVtbl -> GetParentItem(This,ppItem) )
#define IOfflineFilesItem_Refresh(This,dwQueryFlags)( (This)->lpVtbl -> Refresh(This,dwQueryFlags) )
#define IOfflineFilesItem_IsMarkedForDeletion(This,pbMarkedForDeletion)( (This)->lpVtbl -> IsMarkedForDeletion(This,pbMarkedForDeletion) )
#endif
#endif
#ifndef __IOfflineFilesServerItem_INTERFACE_DEFINED__
#define __IOfflineFilesServerItem_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesServerItem;
typedef struct IOfflineFilesServerItemVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesServerItem * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesServerItem * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesServerItem * This);
	HRESULT(STDMETHODCALLTYPE * GetItemType) (IOfflineFilesServerItem * This, OFFLINEFILES_ITEM_TYPE * pItemType);
	HRESULT(STDMETHODCALLTYPE * GetPath) (IOfflineFilesServerItem * This, LPWSTR * ppszPath);
	HRESULT(STDMETHODCALLTYPE * GetParentItem) (IOfflineFilesServerItem * This, IOfflineFilesItem ** ppItem);
	HRESULT(STDMETHODCALLTYPE * Refresh) (IOfflineFilesServerItem * This, DWORD dwQueryFlags);
	HRESULT(STDMETHODCALLTYPE * IsMarkedForDeletion) (IOfflineFilesServerItem * This, BOOL * pbMarkedForDeletion);
	END_INTERFACE
}  IOfflineFilesServerItemVtbl;
interface IOfflineFilesServerItem
{
	CONST_VTBL struct IOfflineFilesServerItemVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesServerItem_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesServerItem_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesServerItem_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesServerItem_GetItemType(This,pItemType)( (This)->lpVtbl -> GetItemType(This,pItemType) )
#define IOfflineFilesServerItem_GetPath(This,ppszPath)( (This)->lpVtbl -> GetPath(This,ppszPath) )
#define IOfflineFilesServerItem_GetParentItem(This,ppItem)( (This)->lpVtbl -> GetParentItem(This,ppItem) )
#define IOfflineFilesServerItem_Refresh(This,dwQueryFlags)( (This)->lpVtbl -> Refresh(This,dwQueryFlags) )
#define IOfflineFilesServerItem_IsMarkedForDeletion(This,pbMarkedForDeletion)( (This)->lpVtbl -> IsMarkedForDeletion(This,pbMarkedForDeletion) )
#endif
#endif
#ifndef __IOfflineFilesShareItem_INTERFACE_DEFINED__
#define __IOfflineFilesShareItem_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesShareItem;
typedef struct IOfflineFilesShareItemVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesShareItem * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesShareItem * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesShareItem * This);
	HRESULT(STDMETHODCALLTYPE * GetItemType) (IOfflineFilesShareItem * This, OFFLINEFILES_ITEM_TYPE * pItemType);
	HRESULT(STDMETHODCALLTYPE * GetPath) (IOfflineFilesShareItem * This, LPWSTR * ppszPath);
	HRESULT(STDMETHODCALLTYPE * GetParentItem) (IOfflineFilesShareItem * This, IOfflineFilesItem ** ppItem);
	HRESULT(STDMETHODCALLTYPE * Refresh) (IOfflineFilesShareItem * This, DWORD dwQueryFlags);
	HRESULT(STDMETHODCALLTYPE * IsMarkedForDeletion) (IOfflineFilesShareItem * This, BOOL * pbMarkedForDeletion);
	END_INTERFACE
}  IOfflineFilesShareItemVtbl;
interface IOfflineFilesShareItem
{
	CONST_VTBL struct IOfflineFilesShareItemVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesShareItem_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesShareItem_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesShareItem_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesShareItem_GetItemType(This,pItemType)( (This)->lpVtbl -> GetItemType(This,pItemType) )
#define IOfflineFilesShareItem_GetPath(This,ppszPath)( (This)->lpVtbl -> GetPath(This,ppszPath) )
#define IOfflineFilesShareItem_GetParentItem(This,ppItem)( (This)->lpVtbl -> GetParentItem(This,ppItem) )
#define IOfflineFilesShareItem_Refresh(This,dwQueryFlags)( (This)->lpVtbl -> Refresh(This,dwQueryFlags) )
#define IOfflineFilesShareItem_IsMarkedForDeletion(This,pbMarkedForDeletion)( (This)->lpVtbl -> IsMarkedForDeletion(This,pbMarkedForDeletion) )
#endif
#endif
#ifndef __IOfflineFilesDirectoryItem_INTERFACE_DEFINED__
#define __IOfflineFilesDirectoryItem_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesDirectoryItem;
typedef struct IOfflineFilesDirectoryItemVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesDirectoryItem * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesDirectoryItem * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesDirectoryItem * This);
	HRESULT(STDMETHODCALLTYPE * GetItemType) (IOfflineFilesDirectoryItem * This, OFFLINEFILES_ITEM_TYPE * pItemType);
	HRESULT(STDMETHODCALLTYPE * GetPath) (IOfflineFilesDirectoryItem * This, LPWSTR * ppszPath);
	HRESULT(STDMETHODCALLTYPE * GetParentItem) (IOfflineFilesDirectoryItem * This, IOfflineFilesItem ** ppItem);
	HRESULT(STDMETHODCALLTYPE * Refresh) (IOfflineFilesDirectoryItem * This, DWORD dwQueryFlags);
	HRESULT(STDMETHODCALLTYPE * IsMarkedForDeletion) (IOfflineFilesDirectoryItem * This, BOOL * pbMarkedForDeletion);
	END_INTERFACE
}  IOfflineFilesDirectoryItemVtbl;
interface IOfflineFilesDirectoryItem
{
	CONST_VTBL struct IOfflineFilesDirectoryItemVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesDirectoryItem_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesDirectoryItem_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesDirectoryItem_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesDirectoryItem_GetItemType(This,pItemType)( (This)->lpVtbl -> GetItemType(This,pItemType) )
#define IOfflineFilesDirectoryItem_GetPath(This,ppszPath)( (This)->lpVtbl -> GetPath(This,ppszPath) )
#define IOfflineFilesDirectoryItem_GetParentItem(This,ppItem)( (This)->lpVtbl -> GetParentItem(This,ppItem) )
#define IOfflineFilesDirectoryItem_Refresh(This,dwQueryFlags)( (This)->lpVtbl -> Refresh(This,dwQueryFlags) )
#define IOfflineFilesDirectoryItem_IsMarkedForDeletion(This,pbMarkedForDeletion)( (This)->lpVtbl -> IsMarkedForDeletion(This,pbMarkedForDeletion) )
#endif
#endif
#ifndef __IOfflineFilesFileItem_INTERFACE_DEFINED__
#define __IOfflineFilesFileItem_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesFileItem;
typedef struct IOfflineFilesFileItemVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesFileItem * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesFileItem * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesFileItem * This);
	HRESULT(STDMETHODCALLTYPE * GetItemType) (IOfflineFilesFileItem * This, OFFLINEFILES_ITEM_TYPE * pItemType);
	HRESULT(STDMETHODCALLTYPE * GetPath) (IOfflineFilesFileItem * This, LPWSTR * ppszPath);
	HRESULT(STDMETHODCALLTYPE * GetParentItem) (IOfflineFilesFileItem * This, IOfflineFilesItem ** ppItem);
	HRESULT(STDMETHODCALLTYPE * Refresh) (IOfflineFilesFileItem * This, DWORD dwQueryFlags);
	HRESULT(STDMETHODCALLTYPE * IsMarkedForDeletion) (IOfflineFilesFileItem * This, BOOL * pbMarkedForDeletion);
	HRESULT(STDMETHODCALLTYPE * IsSparse) (IOfflineFilesFileItem * This, BOOL * pbIsSparse);
	HRESULT(STDMETHODCALLTYPE * IsEncrypted) (IOfflineFilesFileItem * This, BOOL * pbIsEncrypted);
	END_INTERFACE
}  IOfflineFilesFileItemVtbl;
interface IOfflineFilesFileItem
{
	CONST_VTBL struct IOfflineFilesFileItemVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesFileItem_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesFileItem_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesFileItem_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesFileItem_GetItemType(This,pItemType)( (This)->lpVtbl -> GetItemType(This,pItemType) )
#define IOfflineFilesFileItem_GetPath(This,ppszPath)( (This)->lpVtbl -> GetPath(This,ppszPath) )
#define IOfflineFilesFileItem_GetParentItem(This,ppItem)( (This)->lpVtbl -> GetParentItem(This,ppItem) )
#define IOfflineFilesFileItem_Refresh(This,dwQueryFlags)( (This)->lpVtbl -> Refresh(This,dwQueryFlags) )
#define IOfflineFilesFileItem_IsMarkedForDeletion(This,pbMarkedForDeletion)( (This)->lpVtbl -> IsMarkedForDeletion(This,pbMarkedForDeletion) )
#define IOfflineFilesFileItem_IsSparse(This,pbIsSparse)( (This)->lpVtbl -> IsSparse(This,pbIsSparse) )
#define IOfflineFilesFileItem_IsEncrypted(This,pbIsEncrypted)( (This)->lpVtbl -> IsEncrypted(This,pbIsEncrypted) )
#endif
#endif
#ifndef __IEnumOfflineFilesItems_INTERFACE_DEFINED__
#define __IEnumOfflineFilesItems_INTERFACE_DEFINED__
extern const IID IID_IEnumOfflineFilesItems;
typedef struct IEnumOfflineFilesItemsVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IEnumOfflineFilesItems * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IEnumOfflineFilesItems * This);
	ULONG(STDMETHODCALLTYPE * Release) (IEnumOfflineFilesItems * This);
	HRESULT(STDMETHODCALLTYPE * Next) (IEnumOfflineFilesItems * This, ULONG celt, IOfflineFilesItem ** rgelt, ULONG * pceltFetched);
	HRESULT(STDMETHODCALLTYPE * Skip) (IEnumOfflineFilesItems * This, ULONG celt);
	HRESULT(STDMETHODCALLTYPE * Reset) (IEnumOfflineFilesItems * This);
	HRESULT(STDMETHODCALLTYPE * Clone) (IEnumOfflineFilesItems * This, IEnumOfflineFilesItems ** ppenum);
	END_INTERFACE
}  IEnumOfflineFilesItemsVtbl;
interface IEnumOfflineFilesItems
{
	CONST_VTBL struct IEnumOfflineFilesItemsVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IEnumOfflineFilesItems_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IEnumOfflineFilesItems_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IEnumOfflineFilesItems_Release(This)( (This)->lpVtbl -> Release(This) )
#define IEnumOfflineFilesItems_Next(This,celt,rgelt,pceltFetched)( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) )
#define IEnumOfflineFilesItems_Skip(This,celt)( (This)->lpVtbl -> Skip(This,celt) )
#define IEnumOfflineFilesItems_Reset(This)( (This)->lpVtbl -> Reset(This) )
#define IEnumOfflineFilesItems_Clone(This,ppenum)( (This)->lpVtbl -> Clone(This,ppenum) )
#endif
#endif
#ifndef __IOfflineFilesItemContainer_INTERFACE_DEFINED__
#define __IOfflineFilesItemContainer_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesItemContainer;
typedef struct IOfflineFilesItemContainerVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesItemContainer * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesItemContainer * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesItemContainer * This);
	HRESULT(STDMETHODCALLTYPE * EnumItems) (IOfflineFilesItemContainer * This, DWORD dwQueryFlags, IEnumOfflineFilesItems ** ppenum);
	HRESULT(STDMETHODCALLTYPE * EnumItemsEx) (IOfflineFilesItemContainer * This, IOfflineFilesItemFilter * pIncludeFileFilter, IOfflineFilesItemFilter * pIncludeDirFilter, IOfflineFilesItemFilter * pExcludeFileFilter, IOfflineFilesItemFilter * pExcludeDirFilter, DWORD dwEnumFlags, DWORD dwQueryFlags, IEnumOfflineFilesItems ** ppenum);
	END_INTERFACE
}  IOfflineFilesItemContainerVtbl;
interface IOfflineFilesItemContainer
{
	CONST_VTBL struct IOfflineFilesItemContainerVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesItemContainer_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesItemContainer_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesItemContainer_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesItemContainer_EnumItems(This,dwQueryFlags,ppenum)( (This)->lpVtbl -> EnumItems(This,dwQueryFlags,ppenum) )
#define IOfflineFilesItemContainer_EnumItemsEx(This,pIncludeFileFilter,pIncludeDirFilter,pExcludeFileFilter,pExcludeDirFilter,dwEnumFlags,dwQueryFlags,ppenum)( (This)->lpVtbl -> EnumItemsEx(This,pIncludeFileFilter,pIncludeDirFilter,pExcludeFileFilter,pExcludeDirFilter,dwEnumFlags,dwQueryFlags,ppenum) )
#endif
#endif
#ifndef __IOfflineFilesChangeInfo_INTERFACE_DEFINED__
#define __IOfflineFilesChangeInfo_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesChangeInfo;
typedef struct IOfflineFilesChangeInfoVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesChangeInfo * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesChangeInfo * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesChangeInfo * This);
	HRESULT(STDMETHODCALLTYPE * IsDirty) (IOfflineFilesChangeInfo * This, BOOL * pbDirty);
	HRESULT(STDMETHODCALLTYPE * IsDeletedOffline) (IOfflineFilesChangeInfo * This, BOOL * pbDeletedOffline);
	HRESULT(STDMETHODCALLTYPE * IsCreatedOffline) (IOfflineFilesChangeInfo * This, BOOL * pbCreatedOffline);
	HRESULT(STDMETHODCALLTYPE * IsLocallyModifiedData) (IOfflineFilesChangeInfo * This, BOOL * pbLocallyModifiedData);
	HRESULT(STDMETHODCALLTYPE * IsLocallyModifiedAttributes) (IOfflineFilesChangeInfo * This, BOOL * pbLocallyModifiedAttributes);
	HRESULT(STDMETHODCALLTYPE * IsLocallyModifiedTime) (IOfflineFilesChangeInfo * This, BOOL * pbLocallyModifiedTime);
	END_INTERFACE
}  IOfflineFilesChangeInfoVtbl;
interface IOfflineFilesChangeInfo
{
	CONST_VTBL struct IOfflineFilesChangeInfoVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesChangeInfo_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesChangeInfo_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesChangeInfo_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesChangeInfo_IsDirty(This,pbDirty)( (This)->lpVtbl -> IsDirty(This,pbDirty) )
#define IOfflineFilesChangeInfo_IsDeletedOffline(This,pbDeletedOffline)( (This)->lpVtbl -> IsDeletedOffline(This,pbDeletedOffline) )
#define IOfflineFilesChangeInfo_IsCreatedOffline(This,pbCreatedOffline)( (This)->lpVtbl -> IsCreatedOffline(This,pbCreatedOffline) )
#define IOfflineFilesChangeInfo_IsLocallyModifiedData(This,pbLocallyModifiedData)( (This)->lpVtbl -> IsLocallyModifiedData(This,pbLocallyModifiedData) )
#define IOfflineFilesChangeInfo_IsLocallyModifiedAttributes(This,pbLocallyModifiedAttributes)( (This)->lpVtbl -> IsLocallyModifiedAttributes(This,pbLocallyModifiedAttributes) )
#define IOfflineFilesChangeInfo_IsLocallyModifiedTime(This,pbLocallyModifiedTime)( (This)->lpVtbl -> IsLocallyModifiedTime(This,pbLocallyModifiedTime) )
#endif
#endif
#ifndef __IOfflineFilesDirtyInfo_INTERFACE_DEFINED__
#define __IOfflineFilesDirtyInfo_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesDirtyInfo;
typedef struct IOfflineFilesDirtyInfoVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesDirtyInfo * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesDirtyInfo * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesDirtyInfo * This);
	HRESULT(STDMETHODCALLTYPE * LocalDirtyByteCount) (IOfflineFilesDirtyInfo * This, LARGE_INTEGER * pDirtyByteCount);
	HRESULT(STDMETHODCALLTYPE * RemoteDirtyByteCount) (IOfflineFilesDirtyInfo * This, LARGE_INTEGER * pDirtyByteCount);
	END_INTERFACE
}  IOfflineFilesDirtyInfoVtbl;
interface IOfflineFilesDirtyInfo
{
	CONST_VTBL struct IOfflineFilesDirtyInfoVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesDirtyInfo_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesDirtyInfo_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesDirtyInfo_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesDirtyInfo_LocalDirtyByteCount(This,pDirtyByteCount)( (This)->lpVtbl -> LocalDirtyByteCount(This,pDirtyByteCount) )
#define IOfflineFilesDirtyInfo_RemoteDirtyByteCount(This,pDirtyByteCount)( (This)->lpVtbl -> RemoteDirtyByteCount(This,pDirtyByteCount) )
#endif
#endif
#ifndef __IOfflineFilesFileSysInfo_INTERFACE_DEFINED__
#define __IOfflineFilesFileSysInfo_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesFileSysInfo;
typedef struct IOfflineFilesFileSysInfoVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesFileSysInfo * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesFileSysInfo * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesFileSysInfo * This);
	HRESULT(STDMETHODCALLTYPE * GetAttributes) (IOfflineFilesFileSysInfo * This, OFFLINEFILES_ITEM_COPY copy, DWORD * pdwAttributes);
	HRESULT(STDMETHODCALLTYPE * GetTimes) (IOfflineFilesFileSysInfo * This, OFFLINEFILES_ITEM_COPY copy, FILETIME * pftCreationTime, FILETIME * pftLastWriteTime, FILETIME * pftChangeTime, FILETIME * pftLastAccessTime);
	HRESULT(STDMETHODCALLTYPE * GetFileSize) (IOfflineFilesFileSysInfo * This, OFFLINEFILES_ITEM_COPY copy, LARGE_INTEGER * pSize);
	END_INTERFACE
}  IOfflineFilesFileSysInfoVtbl;
interface IOfflineFilesFileSysInfo
{
	CONST_VTBL struct IOfflineFilesFileSysInfoVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesFileSysInfo_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesFileSysInfo_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesFileSysInfo_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesFileSysInfo_GetAttributes(This,copy,pdwAttributes)( (This)->lpVtbl -> GetAttributes(This,copy,pdwAttributes) )
#define IOfflineFilesFileSysInfo_GetTimes(This,copy,pftCreationTime,pftLastWriteTime,pftChangeTime,pftLastAccessTime)( (This)->lpVtbl -> GetTimes(This,copy,pftCreationTime,pftLastWriteTime,pftChangeTime,pftLastAccessTime) )
#define IOfflineFilesFileSysInfo_GetFileSize(This,copy,pSize)( (This)->lpVtbl -> GetFileSize(This,copy,pSize) )
#endif
#endif
#ifndef __IOfflineFilesPinInfo_INTERFACE_DEFINED__
#define __IOfflineFilesPinInfo_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesPinInfo;
typedef struct IOfflineFilesPinInfoVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesPinInfo * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesPinInfo * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesPinInfo * This);
	HRESULT(STDMETHODCALLTYPE * IsPinned) (IOfflineFilesPinInfo * This, BOOL * pbPinned);
	HRESULT(STDMETHODCALLTYPE * IsPinnedForUser) (IOfflineFilesPinInfo * This, BOOL * pbPinnedForUser, BOOL * pbInherit);
	HRESULT(STDMETHODCALLTYPE * IsPinnedForUserByPolicy) (IOfflineFilesPinInfo * This, BOOL * pbPinnedForUser, BOOL * pbInherit);
	HRESULT(STDMETHODCALLTYPE * IsPinnedForComputer) (IOfflineFilesPinInfo * This, BOOL * pbPinnedForComputer, BOOL * pbInherit);
	HRESULT(STDMETHODCALLTYPE * IsPinnedForFolderRedirection) (IOfflineFilesPinInfo * This, BOOL * pbPinnedForFolderRedirection, BOOL * pbInherit);
	END_INTERFACE
}  IOfflineFilesPinInfoVtbl;
interface IOfflineFilesPinInfo
{
	CONST_VTBL struct IOfflineFilesPinInfoVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesPinInfo_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesPinInfo_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesPinInfo_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesPinInfo_IsPinned(This,pbPinned)( (This)->lpVtbl -> IsPinned(This,pbPinned) )
#define IOfflineFilesPinInfo_IsPinnedForUser(This,pbPinnedForUser,pbInherit)( (This)->lpVtbl -> IsPinnedForUser(This,pbPinnedForUser,pbInherit) )
#define IOfflineFilesPinInfo_IsPinnedForUserByPolicy(This,pbPinnedForUser,pbInherit)( (This)->lpVtbl -> IsPinnedForUserByPolicy(This,pbPinnedForUser,pbInherit) )
#define IOfflineFilesPinInfo_IsPinnedForComputer(This,pbPinnedForComputer,pbInherit)( (This)->lpVtbl -> IsPinnedForComputer(This,pbPinnedForComputer,pbInherit) )
#define IOfflineFilesPinInfo_IsPinnedForFolderRedirection(This,pbPinnedForFolderRedirection,pbInherit)( (This)->lpVtbl -> IsPinnedForFolderRedirection(This,pbPinnedForFolderRedirection,pbInherit) )
#endif
#endif
#ifndef __IOfflineFilesPinInfo2_INTERFACE_DEFINED__
#define __IOfflineFilesPinInfo2_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesPinInfo2;
typedef struct IOfflineFilesPinInfo2Vtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesPinInfo2 * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesPinInfo2 * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesPinInfo2 * This);
	HRESULT(STDMETHODCALLTYPE * IsPinned) (IOfflineFilesPinInfo2 * This, BOOL * pbPinned);
	HRESULT(STDMETHODCALLTYPE * IsPinnedForUser) (IOfflineFilesPinInfo2 * This, BOOL * pbPinnedForUser, BOOL * pbInherit);
	HRESULT(STDMETHODCALLTYPE * IsPinnedForUserByPolicy) (IOfflineFilesPinInfo2 * This, BOOL * pbPinnedForUser, BOOL * pbInherit);
	HRESULT(STDMETHODCALLTYPE * IsPinnedForComputer) (IOfflineFilesPinInfo2 * This, BOOL * pbPinnedForComputer, BOOL * pbInherit);
	HRESULT(STDMETHODCALLTYPE * IsPinnedForFolderRedirection) (IOfflineFilesPinInfo2 * This, BOOL * pbPinnedForFolderRedirection, BOOL * pbInherit);
	HRESULT(STDMETHODCALLTYPE * IsPartlyPinned) (IOfflineFilesPinInfo2 * This, BOOL * pbPartlyPinned);
	END_INTERFACE
}  IOfflineFilesPinInfo2Vtbl;
interface IOfflineFilesPinInfo2
{
	CONST_VTBL struct IOfflineFilesPinInfo2Vtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesPinInfo2_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesPinInfo2_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesPinInfo2_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesPinInfo2_IsPinned(This,pbPinned)( (This)->lpVtbl -> IsPinned(This,pbPinned) )
#define IOfflineFilesPinInfo2_IsPinnedForUser(This,pbPinnedForUser,pbInherit)( (This)->lpVtbl -> IsPinnedForUser(This,pbPinnedForUser,pbInherit) )
#define IOfflineFilesPinInfo2_IsPinnedForUserByPolicy(This,pbPinnedForUser,pbInherit)( (This)->lpVtbl -> IsPinnedForUserByPolicy(This,pbPinnedForUser,pbInherit) )
#define IOfflineFilesPinInfo2_IsPinnedForComputer(This,pbPinnedForComputer,pbInherit)( (This)->lpVtbl -> IsPinnedForComputer(This,pbPinnedForComputer,pbInherit) )
#define IOfflineFilesPinInfo2_IsPinnedForFolderRedirection(This,pbPinnedForFolderRedirection,pbInherit)( (This)->lpVtbl -> IsPinnedForFolderRedirection(This,pbPinnedForFolderRedirection,pbInherit) )
#define IOfflineFilesPinInfo2_IsPartlyPinned(This,pbPartlyPinned)( (This)->lpVtbl -> IsPartlyPinned(This,pbPartlyPinned) )
#endif
#endif
#ifndef __IOfflineFilesTransparentCacheInfo_INTERFACE_DEFINED__
#define __IOfflineFilesTransparentCacheInfo_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesTransparentCacheInfo;
typedef struct IOfflineFilesTransparentCacheInfoVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesTransparentCacheInfo * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesTransparentCacheInfo * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesTransparentCacheInfo * This);
	HRESULT(STDMETHODCALLTYPE * IsTransparentlyCached) (IOfflineFilesTransparentCacheInfo * This, BOOL * pbTransparentlyCached);
	END_INTERFACE
}  IOfflineFilesTransparentCacheInfoVtbl;
interface IOfflineFilesTransparentCacheInfo
{
	CONST_VTBL struct IOfflineFilesTransparentCacheInfoVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesTransparentCacheInfo_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesTransparentCacheInfo_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesTransparentCacheInfo_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesTransparentCacheInfo_IsTransparentlyCached(This,pbTransparentlyCached)( (This)->lpVtbl -> IsTransparentlyCached(This,pbTransparentlyCached) )
#endif
#endif
#ifndef __IOfflineFilesGhostInfo_INTERFACE_DEFINED__
#define __IOfflineFilesGhostInfo_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesGhostInfo;
typedef struct IOfflineFilesGhostInfoVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesGhostInfo * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesGhostInfo * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesGhostInfo * This);
	HRESULT(STDMETHODCALLTYPE * IsGhosted) (IOfflineFilesGhostInfo * This, BOOL * pbGhosted);
	END_INTERFACE
}  IOfflineFilesGhostInfoVtbl;
interface IOfflineFilesGhostInfo
{
	CONST_VTBL struct IOfflineFilesGhostInfoVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesGhostInfo_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesGhostInfo_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesGhostInfo_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesGhostInfo_IsGhosted(This,pbGhosted)( (This)->lpVtbl -> IsGhosted(This,pbGhosted) )
#endif
#endif
#ifndef __IOfflineFilesConnectionInfo_INTERFACE_DEFINED__
#define __IOfflineFilesConnectionInfo_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesConnectionInfo;
typedef struct IOfflineFilesConnectionInfoVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesConnectionInfo * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesConnectionInfo * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesConnectionInfo * This);
	HRESULT(STDMETHODCALLTYPE * GetConnectState) (IOfflineFilesConnectionInfo * This, OFFLINEFILES_CONNECT_STATE * pConnectState, OFFLINEFILES_OFFLINE_REASON * pOfflineReason);
	HRESULT(STDMETHODCALLTYPE * SetConnectState) (IOfflineFilesConnectionInfo * This, HWND hwndParent, DWORD dwFlags, OFFLINEFILES_CONNECT_STATE ConnectState);
	HRESULT(STDMETHODCALLTYPE * TransitionOnline) (IOfflineFilesConnectionInfo * This, HWND hwndParent, DWORD dwFlags);
	HRESULT(STDMETHODCALLTYPE * TransitionOffline) (IOfflineFilesConnectionInfo * This, HWND hwndParent, DWORD dwFlags, BOOL bForceOpenFilesClosed, BOOL * pbOpenFilesPreventedTransition);
	END_INTERFACE
}  IOfflineFilesConnectionInfoVtbl;
interface IOfflineFilesConnectionInfo
{
	CONST_VTBL struct IOfflineFilesConnectionInfoVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesConnectionInfo_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesConnectionInfo_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesConnectionInfo_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesConnectionInfo_GetConnectState(This,pConnectState,pOfflineReason)( (This)->lpVtbl -> GetConnectState(This,pConnectState,pOfflineReason) )
#define IOfflineFilesConnectionInfo_SetConnectState(This,hwndParent,dwFlags,ConnectState)( (This)->lpVtbl -> SetConnectState(This,hwndParent,dwFlags,ConnectState) )
#define IOfflineFilesConnectionInfo_TransitionOnline(This,hwndParent,dwFlags)( (This)->lpVtbl -> TransitionOnline(This,hwndParent,dwFlags) )
#define IOfflineFilesConnectionInfo_TransitionOffline(This,hwndParent,dwFlags,bForceOpenFilesClosed,pbOpenFilesPreventedTransition)( (This)->lpVtbl -> TransitionOffline(This,hwndParent,dwFlags,bForceOpenFilesClosed,pbOpenFilesPreventedTransition) )
#endif
#endif
#ifndef __IOfflineFilesShareInfo_INTERFACE_DEFINED__
#define __IOfflineFilesShareInfo_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesShareInfo;
typedef struct IOfflineFilesShareInfoVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesShareInfo * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesShareInfo * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesShareInfo * This);
	HRESULT(STDMETHODCALLTYPE * GetShareItem) (IOfflineFilesShareInfo * This, IOfflineFilesShareItem ** ppShareItem);
	HRESULT(STDMETHODCALLTYPE * GetShareCachingMode) (IOfflineFilesShareInfo * This, OFFLINEFILES_CACHING_MODE * pCachingMode);
	HRESULT(STDMETHODCALLTYPE * IsShareDfsJunction) (IOfflineFilesShareInfo * This, BOOL * pbIsDfsJunction);
	END_INTERFACE
}  IOfflineFilesShareInfoVtbl;
interface IOfflineFilesShareInfo
{
	CONST_VTBL struct IOfflineFilesShareInfoVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesShareInfo_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesShareInfo_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesShareInfo_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesShareInfo_GetShareItem(This,ppShareItem)( (This)->lpVtbl -> GetShareItem(This,ppShareItem) )
#define IOfflineFilesShareInfo_GetShareCachingMode(This,pCachingMode)( (This)->lpVtbl -> GetShareCachingMode(This,pCachingMode) )
#define IOfflineFilesShareInfo_IsShareDfsJunction(This,pbIsDfsJunction)( (This)->lpVtbl -> IsShareDfsJunction(This,pbIsDfsJunction) )
#endif
#endif
#ifndef __IOfflineFilesSuspend_INTERFACE_DEFINED__
#define __IOfflineFilesSuspend_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesSuspend;
typedef struct IOfflineFilesSuspendVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesSuspend * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesSuspend * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesSuspend * This);
	HRESULT(STDMETHODCALLTYPE * SuspendRoot) (IOfflineFilesSuspend * This, BOOL bSuspend);
	END_INTERFACE
}  IOfflineFilesSuspendVtbl;
interface IOfflineFilesSuspend
{
	CONST_VTBL struct IOfflineFilesSuspendVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesSuspend_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesSuspend_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesSuspend_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesSuspend_SuspendRoot(This,bSuspend)( (This)->lpVtbl -> SuspendRoot(This,bSuspend) )
#endif
#endif
#ifndef __IOfflineFilesSuspendInfo_INTERFACE_DEFINED__
#define __IOfflineFilesSuspendInfo_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesSuspendInfo;
typedef struct IOfflineFilesSuspendInfoVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesSuspendInfo * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesSuspendInfo * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesSuspendInfo * This);
	HRESULT(STDMETHODCALLTYPE * IsSuspended) (IOfflineFilesSuspendInfo * This, BOOL * pbSuspended, BOOL * pbSuspendedRoot);
	END_INTERFACE
}  IOfflineFilesSuspendInfoVtbl;
interface IOfflineFilesSuspendInfo
{
	CONST_VTBL struct IOfflineFilesSuspendInfoVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesSuspendInfo_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesSuspendInfo_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesSuspendInfo_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesSuspendInfo_IsSuspended(This,pbSuspended,pbSuspendedRoot)( (This)->lpVtbl -> IsSuspended(This,pbSuspended,pbSuspendedRoot) )
#endif
#endif
#ifndef __IOfflineFilesSetting_INTERFACE_DEFINED__
#define __IOfflineFilesSetting_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesSetting;
typedef struct IOfflineFilesSettingVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesSetting * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesSetting * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesSetting * This);
	HRESULT(STDMETHODCALLTYPE * GetName) (IOfflineFilesSetting * This, LPWSTR * ppszName);
	HRESULT(STDMETHODCALLTYPE * GetValueType) (IOfflineFilesSetting * This, OFFLINEFILES_SETTING_VALUE_TYPE * pType);
	HRESULT(STDMETHODCALLTYPE * GetPreference) (IOfflineFilesSetting * This, VARIANT * pvarValue, DWORD dwScope);
	HRESULT(STDMETHODCALLTYPE * GetPreferenceScope) (IOfflineFilesSetting * This, DWORD * pdwScope);
	HRESULT(STDMETHODCALLTYPE * SetPreference) (IOfflineFilesSetting * This, const VARIANT * pvarValue, DWORD dwScope);
	HRESULT(STDMETHODCALLTYPE * DeletePreference) (IOfflineFilesSetting * This, DWORD dwScope);
	HRESULT(STDMETHODCALLTYPE * GetPolicy) (IOfflineFilesSetting * This, VARIANT * pvarValue, DWORD dwScope);
	HRESULT(STDMETHODCALLTYPE * GetPolicyScope) (IOfflineFilesSetting * This, DWORD * pdwScope);
	HRESULT(STDMETHODCALLTYPE * GetValue) (IOfflineFilesSetting * This, VARIANT * pvarValue, BOOL * pbSetByPolicy);
	END_INTERFACE
}  IOfflineFilesSettingVtbl;
interface IOfflineFilesSetting
{
	CONST_VTBL struct IOfflineFilesSettingVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesSetting_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesSetting_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesSetting_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesSetting_GetName(This,ppszName)( (This)->lpVtbl -> GetName(This,ppszName) )
#define IOfflineFilesSetting_GetValueType(This,pType)( (This)->lpVtbl -> GetValueType(This,pType) )
#define IOfflineFilesSetting_GetPreference(This,pvarValue,dwScope)( (This)->lpVtbl -> GetPreference(This,pvarValue,dwScope) )
#define IOfflineFilesSetting_GetPreferenceScope(This,pdwScope)( (This)->lpVtbl -> GetPreferenceScope(This,pdwScope) )
#define IOfflineFilesSetting_SetPreference(This,pvarValue,dwScope)( (This)->lpVtbl -> SetPreference(This,pvarValue,dwScope) )
#define IOfflineFilesSetting_DeletePreference(This,dwScope)( (This)->lpVtbl -> DeletePreference(This,dwScope) )
#define IOfflineFilesSetting_GetPolicy(This,pvarValue,dwScope)( (This)->lpVtbl -> GetPolicy(This,pvarValue,dwScope) )
#define IOfflineFilesSetting_GetPolicyScope(This,pdwScope)( (This)->lpVtbl -> GetPolicyScope(This,pdwScope) )
#define IOfflineFilesSetting_GetValue(This,pvarValue,pbSetByPolicy)( (This)->lpVtbl -> GetValue(This,pvarValue,pbSetByPolicy) )
#endif
#endif
#ifndef __IEnumOfflineFilesSettings_INTERFACE_DEFINED__
#define __IEnumOfflineFilesSettings_INTERFACE_DEFINED__
extern const IID IID_IEnumOfflineFilesSettings;
typedef struct IEnumOfflineFilesSettingsVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IEnumOfflineFilesSettings * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IEnumOfflineFilesSettings * This);
	ULONG(STDMETHODCALLTYPE * Release) (IEnumOfflineFilesSettings * This);
	HRESULT(STDMETHODCALLTYPE * Next) (IEnumOfflineFilesSettings * This, ULONG celt, IOfflineFilesSetting ** rgelt, ULONG * pceltFetched);
	HRESULT(STDMETHODCALLTYPE * Skip) (IEnumOfflineFilesSettings * This, ULONG celt);
	HRESULT(STDMETHODCALLTYPE * Reset) (IEnumOfflineFilesSettings * This);
	HRESULT(STDMETHODCALLTYPE * Clone) (IEnumOfflineFilesSettings * This, IEnumOfflineFilesSettings ** ppenum);
	END_INTERFACE
}  IEnumOfflineFilesSettingsVtbl;
interface IEnumOfflineFilesSettings
{
	CONST_VTBL struct IEnumOfflineFilesSettingsVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IEnumOfflineFilesSettings_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IEnumOfflineFilesSettings_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IEnumOfflineFilesSettings_Release(This)( (This)->lpVtbl -> Release(This) )
#define IEnumOfflineFilesSettings_Next(This,celt,rgelt,pceltFetched)( (This)->lpVtbl -> Next(This,celt,rgelt,pceltFetched) )
#define IEnumOfflineFilesSettings_Skip(This,celt)( (This)->lpVtbl -> Skip(This,celt) )
#define IEnumOfflineFilesSettings_Reset(This)( (This)->lpVtbl -> Reset(This) )
#define IEnumOfflineFilesSettings_Clone(This,ppenum)( (This)->lpVtbl -> Clone(This,ppenum) )
#endif
#endif
#ifndef __IOfflineFilesCache_INTERFACE_DEFINED__
#define __IOfflineFilesCache_INTERFACE_DEFINED__
extern const IID IID_IOfflineFilesCache;
typedef struct IOfflineFilesCacheVtbl
{
	BEGIN_INTERFACE
	HRESULT(STDMETHODCALLTYPE * QueryInterface) (IOfflineFilesCache * This, REFIID riid, void **ppvObject);
	ULONG(STDMETHODCALLTYPE * AddRef) (IOfflineFilesCache * This);
	ULONG(STDMETHODCALLTYPE * Release) (IOfflineFilesCache * This);
	HRESULT(STDMETHODCALLTYPE * Synchronize) (IOfflineFilesCache * This, HWND hwndParent, LPCWSTR * rgpszPaths, ULONG cPaths, BOOL bAsync, DWORD dwSyncControl, IOfflineFilesSyncConflictHandler * pISyncConflictHandler, IOfflineFilesSyncProgress * pIProgress, GUID * pSyncId);
	HRESULT(STDMETHODCALLTYPE * DeleteItems) (IOfflineFilesCache * This, LPCWSTR * rgpszPaths, ULONG cPaths, DWORD dwFlags, BOOL bAsync, IOfflineFilesSimpleProgress * pIProgress);
	HRESULT(STDMETHODCALLTYPE * DeleteItemsForUser) (IOfflineFilesCache * This, LPCWSTR pszUser, LPCWSTR * rgpszPaths, ULONG cPaths, DWORD dwFlags, BOOL bAsync, IOfflineFilesSimpleProgress * pIProgress);
	HRESULT(STDMETHODCALLTYPE * Pin) (IOfflineFilesCache * This, HWND hwndParent, LPCWSTR * rgpszPaths, ULONG cPaths, BOOL bDeep, BOOL bAsync, DWORD dwPinControlFlags, IOfflineFilesSyncProgress * pIProgress);
	HRESULT(STDMETHODCALLTYPE * Unpin) (IOfflineFilesCache * This, HWND hwndParent, LPCWSTR * rgpszPaths, ULONG cPaths, BOOL bDeep, BOOL bAsync, DWORD dwPinControlFlags, IOfflineFilesSyncProgress * pIProgress);
	HRESULT(STDMETHODCALLTYPE * GetEncryptionStatus) (IOfflineFilesCache * This, BOOL * pbEncrypted, BOOL * pbPartial);
	HRESULT(STDMETHODCALLTYPE * Encrypt) (IOfflineFilesCache * This, HWND hwndParent, BOOL bEncrypt, DWORD dwEncryptionControlFlags, BOOL bAsync, IOfflineFilesSyncProgress * pIProgress);
	HRESULT(STDMETHODCALLTYPE * FindItem) (IOfflineFilesCache * This, LPCWSTR pszPath, DWORD dwQueryFlags, IOfflineFilesItem ** ppItem);
	HRESULT(STDMETHODCALLTYPE * FindItemEx) (IOfflineFilesCache * This, LPCWSTR pszPath, IOfflineFilesItemFilter * pIncludeFileFilter, IOfflineFilesItemFilter * pIncludeDirFilter, IOfflineFilesItemFilter * pExcludeFileFilter, IOfflineFilesItemFilter * pExcludeDirFilter, DWORD dwQueryFlags, IOfflineFilesItem ** ppItem);
	HRESULT(STDMETHODCALLTYPE * RenameItem) (IOfflineFilesCache * This, LPCWSTR pszPathOriginal, LPCWSTR pszPathNew, BOOL bReplaceIfExists);
	HRESULT(STDMETHODCALLTYPE * GetLocation) (IOfflineFilesCache * This, LPWSTR * ppszPath);
	HRESULT(STDMETHODCALLTYPE * GetDiskSpaceInformation) (IOfflineFilesCache * This, ULONGLONG * pcbVolumeTotal, ULONGLONG * pcbLimit, ULONGLONG * pcbUsed, ULONGLONG * pcbUnpinnedLimit, ULONGLONG * pcbUnpinnedUsed);
	HRESULT(STDMETHODCALLTYPE * SetDiskSpaceLimits) (IOfflineFilesCache * This, ULONGLONG cbLimit, ULONGLONG cbUnpinnedLimit);
	HRESULT(STDMETHODCALLTYPE * ProcessAdminPinPolicy) (IOfflineFilesCache * This, IOfflineFilesSyncProgress * pPinProgress, IOfflineFilesSyncProgress * pUnpinProgress);
	HRESULT(STDMETHODCALLTYPE * GetSettingObject) (IOfflineFilesCache * This, LPCWSTR pszSettingName, IOfflineFilesSetting ** ppSetting);
	HRESULT(STDMETHODCALLTYPE * EnumSettingObjects) (IOfflineFilesCache * This, IEnumOfflineFilesSettings ** ppEnum);
	HRESULT(STDMETHODCALLTYPE * IsPathCacheable) (IOfflineFilesCache * This, LPCWSTR pszPath, BOOL * pbCacheable, OFFLINEFILES_CACHING_MODE * pShareCachingMode);
	END_INTERFACE
}  IOfflineFilesCacheVtbl;
interface IOfflineFilesCache
{
	CONST_VTBL struct IOfflineFilesCacheVtbl *lpVtbl;
};
#ifdef COBJMACROS
#define IOfflineFilesCache_QueryInterface(This,riid,ppvObject)( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) )
#define IOfflineFilesCache_AddRef(This)( (This)->lpVtbl -> AddRef(This) )
#define IOfflineFilesCache_Release(This)( (This)->lpVtbl -> Release(This) )
#define IOfflineFilesCache_Synchronize(This,hwndParent,rgpszPaths,cPaths,bAsync,dwSyncControl,pISyncConflictHandler,pIProgress,pSyncId)( (This)->lpVtbl -> Synchronize(This,hwndParent,rgpszPaths,cPaths,bAsync,dwSyncControl,pISyncConflictHandler,pIProgress,pSyncId) )
#define IOfflineFilesCache_DeleteItems(This,rgpszPaths,cPaths,dwFlags,bAsync,pIProgress)( (This)->lpVtbl -> DeleteItems(This,rgpszPaths,cPaths,dwFlags,bAsync,pIProgress) )
#define IOfflineFilesCache_DeleteItemsForUser(This,pszUser,rgpszPaths,cPaths,dwFlags,bAsync,pIProgress)( (This)->lpVtbl -> DeleteItemsForUser(This,pszUser,rgpszPaths,cPaths,dwFlags,bAsync,pIProgress) )
#define IOfflineFilesCache_Pin(This,hwndParent,rgpszPaths,cPaths,bDeep,bAsync,dwPinControlFlags,pIProgress)( (This)->lpVtbl -> Pin(This,hwndParent,rgpszPaths,cPaths,bDeep,bAsync,dwPinControlFlags,pIProgress) )
#define IOfflineFilesCache_Unpin(This,hwndParent,rgpszPaths,cPaths,bDeep,bAsync,dwPinControlFlags,pIProgress)( (This)->lpVtbl -> Unpin(This,hwndParent,rgpszPaths,cPaths,bDeep,bAsync,dwPinControlFlags,pIProgress) )
#define IOfflineFilesCache_GetEncryptionStatus(This,pbEncrypted,pbPartial)( (This)->lpVtbl -> GetEncryptionStatus(This,pbEncrypted,pbPartial) )
#define IOfflineFilesCache_Encrypt(This,hwndParent,bEncrypt,dwEncryptionControlFlags,bAsync,pIProgress)( (This)->lpVtbl -> Encrypt(This,hwndParent,bEncrypt,dwEncryptionControlFlags,bAsync,pIProgress) )
#define IOfflineFilesCache_FindItem(This,pszPath,dwQueryFlags,ppItem)( (This)->lpVtbl -> FindItem(This,pszPath,dwQueryFlags,ppItem) )
#define IOfflineFilesCache_FindItemEx(This,pszPath,pIncludeFileFilter,pIncludeDirFilter,pExcludeFileFilter,pExcludeDirFilter,dwQueryFlags,ppItem)( (This)->lpVtbl -> FindItemEx(This,pszPath,pIncludeFileFilter,pIncludeDirFilter,pExcludeFileFilter,pExcludeDirFilter,dwQueryFlags,ppItem) )
#define IOfflineFilesCache_RenameItem(This,pszPathOriginal,pszPathNew,bReplaceIfExists)( (This)->lpVtbl -> RenameItem(This,pszPathOriginal,pszPathNew,bReplaceIfExists) )
#define IOfflineFilesCache_GetLocation(This,ppszPath)( (This)->lpVtbl -> GetLocation(This,ppszPath) )
#define IOfflineFilesCache_GetDiskSpaceInformation(This,pcbVolumeTotal,pcbLimit,pcbUsed,pcbUnpinnedLimit,pcbUnpinnedUsed)( (This)->lpVtbl -> GetDiskSpaceInformation(This,pcbVolumeTotal,pcbLimit,pcbUsed,pcbUnpinnedLimit,pcbUnpinnedUsed) )
#define IOfflineFilesCache_SetDiskSpaceLimits(This,cbLimit,cbUnpinnedLimit)( (This)->lpVtbl -> SetDiskSpaceLimits(This,cbLimit,cbUnpinnedLimit) )
#define IOfflineFilesCache_ProcessAdminPinPolicy(This,pPinProgress,pUnpinProgress)( (This)->lpVtbl -> ProcessAdminPinPolicy(This,pPinProgress,pUnpinProgress) )
#define IOfflineFilesCache_GetSettingObject(This,pszSettingName,ppSetting)( (This)->lpVtbl -> GetSettingObject(This,pszSettingName,ppSetting) )
#define IOfflineFilesCache_EnumSettingObjects(This,ppEnum)( (This)->lpVtbl -> EnumSettingObjects(This,ppEnum) )
#define IOfflineFilesCache_IsPathCacheable(This,pszPath,pbCacheable,pShareCachingMode)( (This)->lpVtbl -> IsPathCacheable(This,pszPath,pbCacheable,pShareCachingMode) )
#endif
#endif
#ifndef __OfflineFilesObjects_LIBRARY_DEFINED__
#define __OfflineFilesObjects_LIBRARY_DEFINED__
extern const IID LIBID_OfflineFilesObjects;
extern const CLSID CLSID_OfflineFilesSetting;
extern const CLSID CLSID_OfflineFilesCache;
#endif
unsigned long __RPC_USER HWND_UserSize(unsigned long *, unsigned long, HWND *);
unsigned char *__RPC_USER HWND_UserMarshal(unsigned long *, unsigned char *, HWND *);
unsigned char *__RPC_USER HWND_UserUnmarshal(unsigned long *, unsigned char *, HWND *);
void __RPC_USER HWND_UserFree(unsigned long *, HWND *);
unsigned long __RPC_USER VARIANT_UserSize(unsigned long *, unsigned long, VARIANT *);
unsigned char *__RPC_USER VARIANT_UserMarshal(unsigned long *, unsigned char *, VARIANT *);
unsigned char *__RPC_USER VARIANT_UserUnmarshal(unsigned long *, unsigned char *, VARIANT *);
void __RPC_USER VARIANT_UserFree(unsigned long *, VARIANT *);
unsigned long __RPC_USER HWND_UserSize64(unsigned long *, unsigned long, HWND *);
unsigned char *__RPC_USER HWND_UserMarshal64(unsigned long *, unsigned char *, HWND *);
unsigned char *__RPC_USER HWND_UserUnmarshal64(unsigned long *, unsigned char *, HWND *);
void __RPC_USER HWND_UserFree64(unsigned long *, HWND *);
unsigned long __RPC_USER VARIANT_UserSize64(unsigned long *, unsigned long, VARIANT *);
unsigned char *__RPC_USER VARIANT_UserMarshal64(unsigned long *, unsigned char *, VARIANT *);
unsigned char *__RPC_USER VARIANT_UserUnmarshal64(unsigned long *, unsigned char *, VARIANT *);
void __RPC_USER VARIANT_UserFree64(unsigned long *, VARIANT *);
#endif
